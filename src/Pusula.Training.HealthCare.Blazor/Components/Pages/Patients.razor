@page "/patients"

@attribute [Authorize(HealthCarePermissions.Patients.Default)]
@using Pusula.Training.HealthCare.Cities
@using Pusula.Training.HealthCare.Countries
@using Pusula.Training.HealthCare.Departments
@using Pusula.Training.HealthCare.Districts
@using Pusula.Training.HealthCare.Doctors
@using Pusula.Training.HealthCare.Insurances
@using Pusula.Training.HealthCare.Notes
@using Pusula.Training.HealthCare.Patients
@using Pusula.Training.HealthCare.Localization
@using Pusula.Training.HealthCare.ProtocolTypes
@using Pusula.Training.HealthCare.Protocols
@using Pusula.Training.HealthCare.Shared
@using Microsoft.AspNetCore.Authorization
@using Microsoft.Extensions.Localization
@using Microsoft.AspNetCore.Components.Web
@using Blazorise
@using Blazorise.Components
@using Blazorise.DataGrid
@using Pusula.Training.HealthCare.Villages
@using Volo.Abp.BlazoriseUI
@using Volo.Abp.BlazoriseUI.Components
@using Volo.Abp.ObjectMapping
@using Volo.Abp.AspNetCore.Components.Messages
@using Volo.Abp.AspNetCore.Components.Web.Theming.Layout
@using Pusula.Training.HealthCare.Blazor.Containers
@using Pusula.Training.HealthCare.Permissions
@using Volo.Abp.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components
@using Volo.Abp.Http.Client
@using System.ComponentModel;
@using System.ComponentModel.DataAnnotations
@using Syncfusion.Blazor.DataForm
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Calendars
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Navigations

@inherits HealthCareComponentBase
@inject PatientStateContainer PatientStateService

@inject IPatientsAppService PatientsAppService
@inject IProtocolsAppService ProtocolsAppService
@inject IInsurancesAppService InsurancesAppService
@inject IProtocolTypesAppService ProtocolTypesAppService
@inject IDepartmentsAppService DepartmentsAppService
@inject IDoctorsAppService DoctorsAppService
@inject INotesAppService NotesAppService


@inject ICountriesAppService countriesAppService
@inject ICountryRepository countryRepository
@inject ICityRepository cityRepository
@inject ICitiesAppService citiesAppService
@inject IDistrictsAppService districtsAppService
@inject IVillagesAppService villagesAppService
@inject IDistrictRepository districtRepository
@inject IVillageRepository villageRepository
@inject IUiMessageService UiMessageService
@inject AbpBlazorMessageLocalizerHelper<HealthCareResource> LH
@inject IRemoteServiceConfigurationProvider RemoteServiceConfigurationProvider
@inject NavigationManager NavigationManager
@inject PatientStateContainer StateService

@* ************************* PAGE HEADER ************************* *@
<PageHeader Title="@L["Patients"]" BreadcrumbItems="BreadcrumbItems" Toolbar="Toolbar">

</PageHeader>
@* @* ************************* SEARCH ************************* *@

<Card>
    <CardBody>
        @*//<suite-custom-code-block-1>*@
        @*//</suite-custom-code-block-1>*@
        <Form id="PatientSearchForm" class="mb-3">
            <Addons>
                <Addon AddonType="AddonType.Body">
                    <TextEdit 
                              @bind-value= "@Filter.FilterText"
                              @oninput="@OnSearchTextChanged"
                              Autofocus="true"
                              Placeholder="@L["Search"]">
                    </TextEdit>
                </Addon>
               
            </Addons>
        </Form>


        @* <Row Class="mt-3 mb-3">
        <div class="col-md-12">
        <a href="javascript:;" class="text-decoration-none" @onclick="() => ShowAdvancedFilters = !ShowAdvancedFilters">@L["SeeAdvancedFilters"]</a>
        </div>
        </Row> *@

        <div>
            @* style="display: @(!ShowAdvancedFilters ? "none" : "block")"  div içine konulup kullanýlabilir*@
            <Row>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["PatientNo"]</FieldLabel>
                        <TextEdit Text="@Filter.No?.ToString()" TextChanged="@OnNoChanged" />
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["FirstName"]</FieldLabel>
                        <TextEdit Text="@Filter.FirstName" TextChanged="@OnFirstNameChanged" />
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["LastName"]</FieldLabel>
                        <TextEdit Text="@Filter.LastName" TextChanged="@OnLastNameChanged" />
                    </Field>
                </Column>

                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["IdentityNumber"]</FieldLabel>
                        <TextEdit Text="@Filter.IdentityNumber" TextChanged="@OnIdentityNumberChanged" />
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["PassportNumber"]</FieldLabel>
                        <TextEdit Text="@Filter.PassportNumber" TextChanged="@OnPassportNumberChanged" />
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["Email"]</FieldLabel>
                        <TextEdit Text="@Filter.Email" TextChanged="@OnEmailChanged" />
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MobilePhoneNumber"]</FieldLabel>
                        <TextEdit Text="@Filter.MobilePhoneNumber" TextChanged="@OnMobilePhoneNumberChanged" />
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field Style="margin-top: 24px;">
                        <Addon AddonType="AddonType.End">
                            <SubmitButton Form="PatientSearchForm" Clicked="OnSearchButtonClicked">
                                <Icon Name="Blazorise.IconName.Search" Class="me-1"></Icon>@L["Filter"]
                            </SubmitButton>
                        </Addon>
                    </Field>
                </Column>


                @* <Column ColumnSize="ColumnSize.Is3">
                <Field>
                <FieldLabel>@L["MinBirthDate"]</FieldLabel>
                <DatePicker TValue="DateTime?"
                InputMode="DateInputMode.Date"
                Date="@Filter.BirthDateMin"
                DateChanged="@OnBirthDateMinChangedAsync"
                Placeholder="@string.Empty" />
                </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                <Field>
                <FieldLabel>@L["MaxBirthDate"]</FieldLabel>
                <DatePicker TValue="DateTime?"
                InputMode="DateInputMode.Date"
                Date="@Filter.BirthDateMax"
                DateChanged="@OnBirthDateMaxChangedAsync"
                Placeholder="@string.Empty" />
                </Field>
                </Column> *@
            </Row>
            @*//<suite-custom-code-block-2>*@
            @*//</suite-custom-code-block-2>*@
            </div>

            @*//<suite-custom-code-block-3>*@
            @*//</suite-custom-code-block-3>*@
    </CardBody>
</Card>

@* ************************* DATA GRID ************************* *@
<Card>
    <CardBody>
        @if (SelectedPatients.Any())
        {
            <div class="d-flex justify-content-between align-items-center mb-2">
                @if (AllPatientsSelected)
                {
                    <p class="lead mb-0">
                        @L["AllItemsAreSelected", TotalCount]
                    </p>
                }
                else
                {
                    <p class="lead mb-0">
                        @if (SelectedPatients.Count > 1)
                        {
                            @L["NumberOfItemsOnThisPageAreSelected", SelectedPatients.Count]
                        }
                        else
                        {
                            @L["OneItemOnThisPageIsSelected"]
                        }
                    </p>
                }

                <div>
                    @if ((SelectedPatients.Count == PageSize || SelectedPatients.Count == PatientList.Count) && TotalCount > SelectedPatients.Count)
                    {
                        if (!AllPatientsSelected)
                        {
                            <Button Clicked="SelectAllItems" Class="mx-1 btn-outline-secondary">@L["SelectAllItems", TotalCount]</Button>
                        }
                        else
                        {
                            <Button Clicked="ClearSelection" Class="mx-1 btn-outline-secondary">@L["ClearSelection"]</Button>
                        }
                    }

                   
                    @if (SelectedPatients.Count == 1)
                    {
                        <Button Color="Color.Primary" Class="mx-1" Size="Blazorise.Size.Medium" Clicked="NavigateToAppointments">
                            <Icon Name="@Blazorise.IconName.Calendar" /> Yeni 
                        </Button>
                    }
                </div>
            </div>

            <hr class="my-1 mx-0" />
        }
        <DataGrid TItem="PatientWithNavigationPropertiesDto"
                  Data="PatientList"
                  SelectionMode="DataGridSelectionMode.Multiple"
                  SelectedRows="SelectedPatients"
                  RowSelectable="@((args) => CanDeletePatient)"
                  SelectedRowsChanged="SelectedPatientRowsChanged"
                  TotalItems="TotalCount"
                  ShowPager="true"
                  Responsive="true"
                  PageSize="PageSize"
                  Class="datagrid-detail">
            <LoadingTemplate>
                <Row Class="w-100 align-items-center" Style="height: 150px;">
                    <Column>
                        <RadarSpinner />
                    </Column>
                </Row>
            </LoadingTemplate>
            <EmptyTemplate>
                <Row Class="w-100 align-items-center" Style="height: 150px;">
                    <Column>
                        <Heading Size="HeadingSize.Is4" TextAlignment="TextAlignment.Center">@L["NoDataAvailable"]</Heading>
                    </Column>
                </Row>
            </EmptyTemplate>
            <DataGridColumns>

                @if (CanDeletePatient && PatientList.Any())
                {
                    <DataGridMultiSelectColumn TItem="PatientWithNavigationPropertiesDto" DisplayOrder="-1" Width="30px"></DataGridMultiSelectColumn>
                }

                <DataGridEntityActionsColumn TItem="PatientWithNavigationPropertiesDto" @ref="@EntityActionsColumn">
                    <DisplayTemplate>
                        <EntityActions TItem="PatientWithNavigationPropertiesDto" EntityActionsColumn="@EntityActionsColumn">
                            <EntityAction TItem="PatientWithNavigationPropertiesDto"
                                          Visible="@CanEditPatient"
                                          Clicked="async () => await OpenEditPatientModalAsync(context)"
                                          Text="@L["Edit"]"></EntityAction>
                            <EntityAction TItem="PatientWithNavigationPropertiesDto"
                                          Visible="@CanDeletePatient"
                                          Clicked="() => DeletePatientAsync(context)"
                                          ConfirmationMessage="@(()=> L["DeleteConfirmationMessage"])"
                                          Text="@L["Delete"]"></EntityAction>
                            <EntityAction TItem="PatientWithNavigationPropertiesDto"
                                          Visible="true"
                                          Clicked="@(() => OpenProtocolCreateModal(context))"
                                          Text="@L["NewProtocol"]">
                            </EntityAction>
                            @*//<suite-custom-code-block-4>*@
                            @*//</suite-custom-code-block-4>*@
                        </EntityActions>
                    </DisplayTemplate>
                </DataGridEntityActionsColumn>

                <DataGridColumn TItem="PatientWithNavigationPropertiesDto"
                                Field="Patient.No"
                                Caption="@L["PatientNo"]">
                </DataGridColumn>

                <DataGridColumn TItem="PatientWithNavigationPropertiesDto"
                                Field="Patient.FirstName"
                                Caption="@L["FirstName"]">
                </DataGridColumn>

                <DataGridColumn TItem="PatientWithNavigationPropertiesDto"
                                Field="Patient.LastName"
                                Caption="@L["LastName"]">
                </DataGridColumn>

                <DataGridColumn TItem="PatientWithNavigationPropertiesDto"
                                Field="Patient.PassportNumber"
                                Caption="@L["PassportNumber"]">
                </DataGridColumn>

                <DataGridColumn TItem="PatientWithNavigationPropertiesDto"
                                Field="Patient.IdentityNumber"
                                Caption="@L["IdentityNumber"]">
                </DataGridColumn>

                <DataGridColumn TItem="PatientWithNavigationPropertiesDto"
                                Field="Patient.Email"
                                Caption="@L["Email"]">
                </DataGridColumn>

                <DataGridColumn TItem="PatientWithNavigationPropertiesDto"
                                Field="Patient.MobilePhoneNumber"
                                Caption="@L["MobilePhoneNumber"]">
                </DataGridColumn>

                
                <DataGridColumn TItem="PatientWithNavigationPropertiesDto">
                    <DisplayTemplate Context="context">
                        <Button Color="Color.Primary" Class="mx-1" Size="Blazorise.Size.Medium"
                                Clicked="() => NavigateToPatientDetails(context)">
                            <Icon Name="@Blazorise.IconName.InfoCircle" /> @L["Detail"]
                        </Button>
                    </DisplayTemplate>
                </DataGridColumn>



            </DataGridColumns>


        </DataGrid>
    </CardBody>
</Card>


@* ************************* PATIENT CREATE MODAL ************************* *@
<Modal @ref="CreatePatientModal" Closing="@CreatePatientModal.CancelClosingModalWhenFocusLost">
    <ModalContent Centered="true" Size="ModalSize.ExtraLarge">
        @*//<suite-custom-code-block-5>*@
        @*//</suite-custom-code-block-5>*@
        <Form id="CreatePatientForm">
            <ModalHeader>
                <ModalTitle>@L["NewPatient"]</ModalTitle>
                <CloseButton Clicked="CloseCreatePatientModalAsync" />
            </ModalHeader>

            <ModalBody>
                <Validations @ref="@NewPatientValidations"
                             Mode="ValidationMode.Manual"
                             Model="@NewPatient"
                             ValidateOnLoad="false">
                    
                    @* <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["CountryName"]</FieldLabel>
                            <Select TValue="Guid" @bind-SelectedValue="@NewPatient.CountryId">
                                @foreach (var country in CountriesCollection)
                                {
                                    <SelectItem TValue="Guid" Value="@(country.Id)">
                                        @(country.DisplayName)
                                    </SelectItem>
                                }
                            </Select>
                        </Field>
                    </Validation> *@
                    @if (currentStep == 1)
                            {
                        <Heading Size="HeadingSize.Is5" Class="text-center" Style="font-weight: 800;">
                        @L["Personal Information"]
                    </Heading>
                    <div Class="mb-3"></div>
                    <Row>
                        <Column ColumnSize="ColumnSize.Is3">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel>@L["IdentityNumber"] *</FieldLabel>
                                    <TextEdit @bind-Text="@NewPatient.IdentityNumber" MaxLength="PatientConsts.IdentityNumberMaxLength">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </TextEdit>
                                </Field>
                            </Validation>
                        </Column>

                        <Column ColumnSize="ColumnSize.Is3">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel>@L["PassportNumber"] </FieldLabel>
                                    <TextEdit @bind-Text="@NewPatient.PassportNumber" MaxLength="PatientConsts.PassportNumberMaxLength">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </TextEdit>
                                </Field>
                            </Validation>
                        </Column>

                        <Column ColumnSize="ColumnSize.Is3">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel>@L["FirstName"] *</FieldLabel>
                                    <TextEdit @bind-Text="@NewPatient.FirstName" MaxLength="PatientConsts.FirstNameMaxLength">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </TextEdit>
                                </Field>
                            </Validation>
                        </Column>

                        <Column ColumnSize="ColumnSize.Is3">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel>@L["LastName"] *</FieldLabel>
                                    <TextEdit @bind-Text="@NewPatient.LastName" MaxLength="PatientConsts.LastNameMaxLength">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </TextEdit>
                                </Field>
                            </Validation>
                        </Column>
                    </Row>
                    
                    <Row>
                        <Column ColumnSize="ColumnSize.Is3">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel>@L["Gender"] *</FieldLabel>
                                    <Select TValue="Gender" @bind-SelectedValue="NewPatient.Gender">
                                        @foreach (var gender in GendersCollection)
                                        {
                                            <SelectItem TValue="Gender" Value="@gender.Id">
                                                @gender.DisplayName
                                            </SelectItem>
                                        }
                                    </Select>
                                </Field>
                            </Validation>
                        </Column>

                        <Column ColumnSize="ColumnSize.Is3">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel>@L["BirthDate"] *</FieldLabel>
                                    <DateEdit TValue="DateTime" InputMode="DateInputMode.Date" @bind-Date="@NewPatient.BirthDate">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </DateEdit>
                                </Field>
                            </Validation>
                        </Column>

                        
                    </Row>
                    <div Class="mb-3"></div>

                        <Heading Size="HeadingSize.Is5" Class="text-center" Style="font-weight: 800;">
                        @L["Contact Information"]
                        <div Class="mb-3"></div>
                    </Heading>
                    <Row>
                        @* <Column ColumnSize="ColumnSize.Is3">
                            <Field>
                                <FieldLabel>@L["Code"] </FieldLabel>
                                <TextEdit @bind-Value="SelectedCountryCode" ReadOnly="true">
                                </TextEdit>
                            </Field>

                        </Column> *@

                        <Column ColumnSize="ColumnSize.Is3">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel>@L["MobilePhoneNumber"] *</FieldLabel>
                                    <TextEdit @bind-Text="@NewPatient.MobilePhoneNumber" MaxLength="PatientConsts.PhoneNumberMaxLength">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </TextEdit>
                                </Field>
                            </Validation>
                        </Column>

                        <Column ColumnSize="ColumnSize.Is3">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel>@L["EmergencyPhoneNumber"]</FieldLabel>
                                    <TextEdit @bind-Text="@NewPatient.EmergencyPhoneNumber" MaxLength="PatientConsts.PhoneNumberMaxLength">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </TextEdit>
                                </Field>
                            </Validation>
                        </Column>

                        <Column ColumnSize="ColumnSize.Is3">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel>@L["EmailAddress"]</FieldLabel>
                                    <TextEdit @bind-Text="@NewPatient.Email" MaxLength="PatientConsts.EmailAddressMaxLength" Role="TextRole.Email">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </TextEdit>
                                </Field>
                            </Validation>
                        </Column>

                        <Column ColumnSize="ColumnSize.Is3">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel>@L["Company"]</FieldLabel>
                                    <Select TValue="Guid?" @bind-SelectedValue="@NewPatient.CompanyId">
                                        <SelectItem Value="@Guid.Empty" selected>@L["Select"]</SelectItem>
                                        @foreach (var company in CompaniesCollection)
                                        {
                                            <SelectItem TValue="Guid?" Value="@(company.Id)">
                                                @(company.DisplayName)
                                            </SelectItem>
                                        }
                                    </Select>
                                </Field>
                            </Validation>
                        </Column>
                        </Row>
                    <div Class="mb-3"></div>

                        <Heading Size="HeadingSize.Is5" Class="text-center" Style="font-weight: 800;">
                        @L["Additional Information"]
                    </Heading>
                    <div Class="mb-3"></div>
                    <Row>
                        <Column ColumnSize="ColumnSize.Is3">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel>@L["BloodType"]</FieldLabel>
                                    <Select TValue="BloodType" @bind-SelectedValue="NewPatient.BloodType">
                                        <SelectItem Value="0" selected>@L["Select"]</SelectItem>
                                        @foreach (var bloodType in BloodTypesCollection)
                                        {
                                            <SelectItem TValue="BloodType" Value="@bloodType.Id">
                                                @bloodType.DisplayName
                                            </SelectItem>
                                        }
                                    </Select>
                                </Field>
                            </Validation>
                        </Column>

                        <Column ColumnSize="ColumnSize.Is3">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel>@L["Type"] *</FieldLabel>
                                    <Select TValue="Pusula.Training.HealthCare.Patients.Type" @bind-SelectedValue="NewPatient.Type">
                                        @foreach (var type in TypesCollection)
                                        {
                                            <SelectItem TValue="Pusula.Training.HealthCare.Patients.Type" Value="@type.Id">
                                                @type.DisplayName
                                            </SelectItem>
                                        }
                                    </Select>
                                </Field>
                            </Validation>
                        </Column>

                        <Column ColumnSize="ColumnSize.Is3">
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["MotherName"]</FieldLabel>
                            <TextEdit @bind-Text="@NewPatient.MotherName" MaxLength="PatientConsts.FirstNameMaxLength">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                        </Column>

                        <Column ColumnSize="ColumnSize.Is3">
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["FatherName"]</FieldLabel>
                            <TextEdit @bind-Text="@NewPatient.FatherName" MaxLength="PatientConsts.FirstNameMaxLength">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    </Column>
                        
                    </Row>
                    }
                    else if (currentStep == 2)
                    {
                        <Heading Size="HeadingSize.Is5" Class="text-center" Style="font-weight: 800;">
                        @L["Primary Address"]
                        <div Class="mb-3"></div>
                    </Heading>
                    <Row>
                        <Column ColumnSize="ColumnSize.Is3">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel>@L["Country"]</FieldLabel>
                                    <Select TValue="Guid?" @bind-SelectedValue="@NewPatient.PrimaryCountryId" @onchange="@OnPrimaryCountryChanged">
                                        <SelectItem TValue="Guid" Value="Guid.Empty">
                                            @L["Select"]
                                        </SelectItem>

                                        @foreach (var country in PrimaryCountryList)
                                        {
                                            <SelectItem TValue="Guid" Value="@(country.Id)">
                                                @(country.Name)
                                            </SelectItem>
                                        }
                                    </Select>
                                </Field>
                            </Validation>
                        </Column>

                        <Column ColumnSize="ColumnSize.Is3">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel>@L["City"]</FieldLabel>
                                    <Select TValue="Guid?" @bind-SelectedValue="@NewPatient.PrimaryCityId" @onchange="OnPrimaryCityChanged">
                                        <SelectItem TValue="Guid" Value="Guid.Empty">
                                            @L["Select"]
                                        </SelectItem>

                                        @foreach (var city in PrimaryCityList)
                                        {
                                            <SelectItem TValue="Guid" Value="@(city.Id)">
                                                @(city.Name)
                                            </SelectItem>
                                        }
                                    </Select>
                                </Field>
                            </Validation>
                        </Column>

                        <Column ColumnSize="ColumnSize.Is3">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel>@L["District"]</FieldLabel>
                                    <Select TValue="Guid?" @bind-SelectedValue="@NewPatient.PrimaryDistrictId" @onchange="OnPrimaryDistrictChanged">
                                        <SelectItem TValue="Guid" Value="Guid.Empty">
                                            @L["Select"]
                                        </SelectItem>

                                        @foreach (var district in PrimaryDistrictList)
                                        {
                                            <SelectItem TValue="Guid" Value="@(district.Id)">
                                                @(district.Name)
                                            </SelectItem>
                                        }
                                    </Select>
                                </Field>
                            </Validation>
                        </Column>

                        <Column ColumnSize="ColumnSize.Is3">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel>@L["Village"]</FieldLabel>
                                    <Select TValue="Guid?" @bind-SelectedValue="@NewPatient.PrimaryVillageId">
                                        <SelectItem TValue="Guid" Value="Guid.Empty">
                                            @L["Select"]
                                        </SelectItem>
                                        @foreach (var village in PrimaryVillageList)
                                        {
                                            <SelectItem TValue="Guid" Value="@(village.Id)">
                                                @(village.Name)
                                            </SelectItem>
                                        }
                                    </Select>
                                </Field>
                            </Validation>
                        </Column>

                        <Validation MessageLocalizer="@LH.Localize">
                            <Field>
                                <FieldLabel>@L["Address"]</FieldLabel>
                                <TextEdit @bind-Text="@NewPatient.PrimaryAddressDescription">
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </TextEdit>
                            </Field>
                        </Validation>
                    </Row>
                    <div Class="mb-3"></div>

                        <Heading Size="HeadingSize.Is5" Class="text-center" Style="font-weight: 800;">
                        @L["Secondary Address"]
                        <div Class="mb-3"></div>
                    </Heading>
                    <Row>
                        <Column ColumnSize="ColumnSize.Is3">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel>@L["Country"]</FieldLabel>
                                    <Select TValue="Guid?" @bind-SelectedValue="@NewPatient.SecondaryCountryId" @onchange="OnSecondaryCountryChanged">
                                        <SelectItem TValue="Guid" Value="Guid.Empty">
                                            @L["Select"]
                                        </SelectItem>

                                        @foreach (var country in SecondaryCountryList)
                                        {
                                            <SelectItem TValue="Guid" Value="@(country.Id)">
                                                @(country.Name)
                                            </SelectItem>
                                        }
                                    </Select>
                                </Field>
                            </Validation>
                        </Column>

                        <Column ColumnSize="ColumnSize.Is3">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel>@L["City"]</FieldLabel>
                                    <Select TValue="Guid?" @bind-SelectedValue="@NewPatient.SecondaryCityId" @onchange="OnSecondaryCityChanged">
                                        <SelectItem TValue="Guid" Value="Guid.Empty">
                                            @L["Select"]
                                        </SelectItem>

                                        @foreach (var city in SecondaryCityList)
                                        {
                                            <SelectItem TValue="Guid" Value="@(city.Id)">
                                                @(city.Name)
                                            </SelectItem>
                                        }
                                    </Select>
                                </Field>
                            </Validation>
                        </Column>

                        <Column ColumnSize="ColumnSize.Is3">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel>@L["District"]</FieldLabel>
                                    <Select TValue="Guid?" @bind-SelectedValue="@NewPatient.SecondaryDistrictId" @onchange="OnSecondaryDistrictChanged">
                                        <SelectItem TValue="Guid" Value="Guid.Empty">
                                            @L["Select"]
                                        </SelectItem>

                                        @foreach (var district in SecondaryDistrictList)
                                        {
                                            <SelectItem TValue="Guid" Value="@(district.Id)">
                                                @(district.Name)
                                            </SelectItem>
                                        }
                                    </Select>
                                </Field>
                            </Validation>
                        </Column>

                        <Column ColumnSize="ColumnSize.Is3">
                            <Validation MessageLocalizer="@LH.Localize">
                                <Field>
                                    <FieldLabel>@L["Village"]</FieldLabel>
                                    <Select TValue="Guid?" @bind-SelectedValue="@NewPatient.SecondaryVillageId">
                                        <SelectItem TValue="Guid" Value="Guid.Empty">
                                            @L["Select"]
                                        </SelectItem>

                                        @foreach (var village in SecondaryVillageList)
                                        {
                                            <SelectItem TValue="Guid" Value="@(village.Id)">
                                                @(village.Name)
                                            </SelectItem>
                                        }
                                    </Select>
                                </Field>
                            </Validation>
                        </Column>

                        <Validation MessageLocalizer="@LH.Localize">
                            <Field>
                                <FieldLabel>@L["Address"]</FieldLabel>
                                <TextEdit @bind-Text="@NewPatient.SecondaryAddressDescription">
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </TextEdit>
                            </Field>
                        </Validation>
                    </Row>
                    }
                </Validations>
            </ModalBody>
            <ModalFooter>
                    <div style="display: flex; justify-content: space-between; width: 100%;">
                    <div style="display: flex; gap: 10px;">

                    <Button Color="Color.Danger"
                        Clicked="CloseCreatePatientModalAsync" Style="margin-left: 0; margin-right: auto;">
                    @L["Cancel"]
                </Button>

                <!-- Previous Step Button -->
                <Button Color="Color.Light" Clicked="@PreviousStep" Disabled="@(currentStep == 1)" Style="margin-left: 0; margin-right: auto;">
                    @L["Back"]
                </Button>
                </div>
                        <div style="display: flex; gap: 10px;">

                <!-- Next Step Button -->
                <Button Color="Color.Success" Clicked="@NextStep" Disabled="@(currentStep == 2)">
                    @L["Next"]
                </Button>

                <SubmitButton Form="CreatePatientForm" Clicked="CreatePatientAsync" />
                @*//<suite-custom-code-block-6>*@
                @*//</suite-custom-code-block-6>*@
                    </div>
                </div>

            </ModalFooter>
        </Form>
        @*//<suite-custom-code-block-7>*@
        @*//</suite-custom-code-block-7>*@
    </ModalContent>
</Modal>

@* ************************* PATIENT EDIT MODAL ************************* *@
<Modal @ref="EditPatientModal" Closing="@EditPatientModal.CancelClosingModalWhenFocusLost">
    <ModalContent Centered="true" Size="ModalSize.ExtraLarge">
        <Form id="EditPatientForm">
            <ModalHeader>
                <ModalTitle>@L["Update"]</ModalTitle>
                <CloseButton Clicked="CloseEditPatientModalAsync" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@EditingPatientValidations"
                             Mode="ValidationMode.Manual"
                             Model="@EditingPatient"
                             ValidateOnLoad="false">

                    <Row>
                          <Column ColumnSize="ColumnSize.Is3">
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["FirstName"] *</FieldLabel>
                            <TextEdit @bind-Text="@EditingPatient.FirstName" MaxLength="PatientConsts.FirstNameMaxLength">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    </Column>

                    <Column ColumnSize="ColumnSize.Is3">
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["LastName"] *</FieldLabel>
                            <TextEdit @bind-Text="@EditingPatient.LastName" MaxLength="PatientConsts.LastNameMaxLength">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                        </Column>

                        <Column ColumnSize="ColumnSize.Is3">
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["BirthDate"]</FieldLabel>
                            <DateEdit TValue="DateTime" InputMode="DateInputMode.Date" @bind-Date="@EditingPatient.BirthDate">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </DateEdit>
                        </Field>
                    </Validation>
                        </Column>

                        <Column ColumnSize="ColumnSize.Is3">
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["IdentityNumber"] *</FieldLabel>
                            <TextEdit @bind-Text="@EditingPatient.IdentityNumber" MaxLength="PatientConsts.IdentityNumberMaxLength">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                        </Column>
                        </Row>

                        <Row>
                          <Column ColumnSize="ColumnSize.Is3">  
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["PassportNumber"] *</FieldLabel>
                            <TextEdit @bind-Text="@EditingPatient.PassportNumber" MaxLength="PatientConsts.PassportNumberMaxLength">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                        </Column>

                        <Column ColumnSize="ColumnSize.Is3">  
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["EmailAddress"] *</FieldLabel>
                            <TextEdit @bind-Text="@EditingPatient.Email" MaxLength="PatientConsts.EmailAddressMaxLength" Role="TextRole.Email">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                        </Column>

                        <Column ColumnSize="ColumnSize.Is3"> 
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["MobilePhoneNumber"] *</FieldLabel>
                            <TextEdit @bind-Text="@EditingPatient.MobilePhoneNumber" MaxLength="PatientConsts.PhoneNumberMaxLength">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                        </Column>

                        <Column ColumnSize="ColumnSize.Is3"> 
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["EmergencyPhoneNumber"] *</FieldLabel>
                            <TextEdit @bind-Text="@EditingPatient.EmergencyPhoneNumber" MaxLength="PatientConsts.PhoneNumberMaxLength">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                        </Column>
                    </Row>

                    <Row>
                        <Column ColumnSize="ColumnSize.Is3"> 
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["MotherName"] *</FieldLabel>
                            <TextEdit @bind-Text="@EditingPatient.MotherName" MaxLength="PatientConsts.FirstNameMaxLength">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                        </Column>

                        <Column ColumnSize="ColumnSize.Is3"> 
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["FatherName"] *</FieldLabel>
                            <TextEdit @bind-Text="@EditingPatient.FatherName" MaxLength="PatientConsts.FirstNameMaxLength">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                        </Column>
                    </Row>

                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseEditPatientModalAsync">
                    @L["Cancel"]
                </Button>
                <SubmitButton Form="EditPatientForm" Clicked="UpdatePatientAsync" />
                @*//<suite-custom-code-block-9>*@
                @*//</suite-custom-code-block-9>*@
            </ModalFooter>
        </Form>
        @*//<suite-custom-code-block-10>*@
        @*//</suite-custom-code-block-10>*@
    </ModalContent>
</Modal>


@* ************************* PROTOCOL CREATE MODAL ************************* *@
<SfDialog @ref="CreateProtocolsDialog" IsModal="true" ShowCloseIcon="true" Width="600px" Header="New Protocol" Visible="false">
    <DialogTemplates>
        <Content>
            <EditForm Model="@ProtocolCreateDto" OnValidSubmit="AddNewProtocol" class="needs-validation" novalidate>
                <DataAnnotationsValidator />

                <div class="row">

                    <div class="col-6">
                        <label for="departmentId">Department</label>
                        <select id="departmentId" class="form-select" @bind="ProtocolCreateDto.DepartmentId">
                            <option value="">@L["Select"]</option>
                            @foreach (var department in FilteredDepartments)
                            {
                                <option value="@department.Id">@department.Name</option>
                            }
                        </select>
                        <ValidationMessage For="@(() => ProtocolCreateDto.DepartmentId)" />
                    </div>

                    <div class="col-6">
                        <label for="doctorId">Doctor</label>
                        <select id="doctorId" class="form-select" @bind="ProtocolCreateDto.DoctorId" @onclick="SelectDoctorAsync">
                            <option value="">@L["Select"]</option>
                            @foreach (var doctor in FilteredDoctors)
                            {
                                <option value="@doctor.Doctor.Id">@doctor.FullName</option>
                            }
                        </select>
                        <ValidationMessage For="@(() => ProtocolCreateDto.DoctorId)" />
                    </div>

                </div>

                <div class="row">

                    <div class="col-6">
                        <label for="protokolType">Type</label>
                        <select id="protokolId" class="form-select" @bind="ProtocolCreateDto.ProtocolTypeId">
                            <option value="">@L["Select"]</option>
                            @foreach (var type in ProtocolTypeList)
                            {
                                <option value="@type.Id">@type.DisplayName</option>
                            }
                        </select>
                        <ValidationMessage For="@(() => ProtocolCreateDto.ProtocolTypeId)" />
                    </div>

                    <div class="col-6">
                        <label for="insurance">Insurance</label>
                        <select id="insuranceId" class="form-select" @bind="ProtocolCreateDto.ProtocolInsuranceId">
                            <option value="">@L["Select"]</option>
                            @foreach (var insurance in InsuranceList)
                            {
                                <option value="@insurance.Id">@insurance.DisplayName</option>
                            }
                        </select>
                        <ValidationMessage For="@(() => ProtocolCreateDto.ProtocolInsuranceId)" />
                    </div>

                </div>
               
            <div class="row">

                <div class="col-6">
                    <label for="status">Status</label>
                    <select id="protocolStatus" class="form-select" @bind="ProtocolCreateDto.ProtocolStatus">
                            <option value="">@L["Select"]</option>
                        @foreach (var status in ProtocolStatusCollection)
                        {
                            <option value="@status.Id">@status.DisplayName</option>
                        }
                    </select>
                    <ValidationMessage For="@(() => ProtocolCreateDto.ProtocolStatus)" />
                </div>

                <div class="col-6">
                    <label for="protocolNote">Note</label>
                    <textarea id="note" class="form-control" rows="4" @bind="ProtocolCreateDto.NoteText"
                              placeholder="Note"></textarea>
                        <ValidationMessage For="@(() => ProtocolCreateDto.NoteText)" />
                </div>

            </div>

                <div class="row">

                    <div class="col-6">
                        <label for="startTime">Start Time</label>
                        <SfDateTimePicker TValue="DateTime" @bind-Value="ProtocolCreateDto.StartTime"></SfDateTimePicker>
                        <ValidationMessage For="@(() => ProtocolCreateDto.StartTime)" />
                    </div>

                    <div class="col-6">
                        <label for="endTime">End Time</label>
                        <SfDateTimePicker TValue="DateTime" @bind-Value="ProtocolCreateDto.EndTime"></SfDateTimePicker>
                        <ValidationMessage For="@(() => ProtocolCreateDto.EndTime)" />
                    </div>

                </div>

                <div class="row mt-2 mb-2">
                    <div class="col-12 text-end">
                        <SfButton CssClass="e-success e-medium m-1" Content="Kaydet" ></SfButton>
                        <SfButton CssClass="e-secondary e-medium m-1" Content="Iptal" OnClick="CloseProtocolCreateModal" Type="Button"></SfButton>
                    </div>
                </div>
            </EditForm>
        </Content>
    </DialogTemplates>
</SfDialog>
