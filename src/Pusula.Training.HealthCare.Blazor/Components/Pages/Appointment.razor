@page "/appointment"

@using Syncfusion.Blazor.Navigations
@using System.Threading.Tasks
@using System.Linq
@using Syncfusion.Blazor.Schedule
@using Syncfusion.Blazor.Calendars
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Notifications
@using Pusula.Training.HealthCare.Exceptions;
@using Pusula.Training.HealthCare.Shared
@using Pusula.Training.HealthCare.Appointments
@using Pusula.Training.HealthCare.Patients
@using Pusula.Training.HealthCare.Departments
@using Pusula.Training.HealthCare.Doctors
@using Pusula.Training.HealthCare.Blazor.Containers
@using Volo.Abp
@inherits HealthCareComponentBase
@inject Microsoft.AspNetCore.Components.NavigationManager UriHelper
@inject IAppointmentsAppService AppointmentsAppService
@inject IDepartmentsAppService DepartmentsAppService
@inject IDoctorsAppService DoctorsAppService
@inject IPatientsAppService PatientsAppService

@inject IJSRuntime JSRuntime

<div class="stepper-container" style="max-width: 1600px; margin: 0 auto; padding: 40px;">
    <div class="card shadow-lg border-0">
        <div class="card-body">
            <!-- Hasta . Departman ve Doktor Seçim Alanları -->
            <div class="row mb-4 align-items-center">
                <!-- Departman Seçimi -->
                <div class="col-md-5 mb-3">
                    <h5 style="color: #495057;">Departman</h5>
                    <SfDropDownList TValue="Guid"
                                    TItem="DepartmentDto"
                                    Placeholder="Departman seçiniz..."
                                    CssClass="custom-dropdown"
                                    DataSource="@FilteredDepartments">
                        <DropDownListFieldSettings Value="Id" Text="Name"></DropDownListFieldSettings>
                        <DropDownListEvents TValue="Guid" TItem="DepartmentDto" ValueChange="OnDepartmentValueChange"></DropDownListEvents>
                    </SfDropDownList>
                </div>

                <!-- Doktor Seçimi -->
                <div class="col-md-5 mb-3">
                    <h5 style="color: #495057;">Doktor</h5>
                    <SfDropDownList DataSource="@FilteredDoctors"
                                    Placeholder="Doktor seçiniz..."
                                    CssClass="custom-dropdown"
                                    TItem="DoctorWithNavigationPropertiesDto"
                                    TValue="Guid">
                        <DropDownListFieldSettings Value="Doctor.Id" Text="FullName"></DropDownListFieldSettings>
                        <DropDownListEvents TValue="Guid" TItem="DoctorWithNavigationPropertiesDto" ValueChange="OnDoctorValueChange"></DropDownListEvents>
                    </SfDropDownList>
                </div>

                <!-- Hasta Seçim Butonu -->
                <div class="col-md-2 mb-3">
                    <button class="btn btn-primary px-3 py-2" style="font-size: 14px; margin-top: 32px;" @onclick="OpenPatientSelectionPopup">
                        <i class="fas fa-user-plus me-2"></i> Hasta Seç
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<SfToast @ref="ToastObj" />
<!-- Randevu Takvimi Ekranı -->
<SfSchedule TValue="FlatAppointmentDto" Width="100%" Height="650px" @bind-SelectedDate="@CurrentDate" @bind-CurrentView="@CurrentView" @ref="SfScheduleInstance" StartHour="09:00" EndHour="18:00">
    <ScheduleTemplates>
        <EditorTemplate >
            @{ 
                var Data = (context as FlatAppointmentDto);
                NewAppointment.StartDate = Data.StartTime; 
                NewAppointment.EndDate = Data.EndTime;
            }
            <table class="custom-event-editor" width="100%" cellpadding="5">
                <tbody>
                    <tr>
                        <td class="e-textlabel">Appointment Type</td>
                        <td colspan="4">
                            <SfDropDownList DataSource="@AppointmentTypesCollection"
                                            Placeholder="Select Appointment Type"
                                            @bind-Value="@NewAppointment.AppointmentTypeId">
                                <DropDownListFieldSettings Value="Id" Text="DisplayName"></DropDownListFieldSettings>
                            </SfDropDownList>
                        </td>
                    </tr>
                    <tr>
                        <td class="e-textlabel">Start Date</td>
                        <td colspan="4">
                            <SfDateTimePicker @bind-Value="@(Data.StartTime)" TValue="DateTime"></SfDateTimePicker>
                        </td>
                    </tr>
                    <tr>
                        <td class="e-textlabel">End Date</td>
                        <td colspan="4">
                            <SfDateTimePicker @bind-Value="@(Data.EndTime)" TValue="DateTime"></SfDateTimePicker>
                        </td>
                    </tr>
                    <tr>
                        <td class="e-textlabel">Status</td>
                        <td colspan="4">
                    <SfDropDownList DataSource="@AppointmentStatusCollection"
                                    Placeholder="Choose Status"
                                    @bind-Value="@NewAppointment.AppointmentStatus">
                        <DropDownListFieldSettings Value="Id" Text="DisplayName"></DropDownListFieldSettings>
                    </SfDropDownList>
                    </td>
                    </tr>
                    <tr>
                        <td class="e-textlabel">Note</td>
                        <td colspan="4">
                            <SfTextBox Multiline="true" @bind-Value="@NewAppointment.Note"></SfTextBox>
                        </td>
                    </tr>
                    <tr>
                        <td class="e-textlabel">Is Block</td>
                        <td colspan="4">
                            <SfSwitch @bind-Checked="@NewAppointment.IsBlock" TChecked="bool" Label="Block/Unblock"></SfSwitch>
                        </td>
                    </tr>
                    
                </tbody>
            </table> 
            <div style="color: red; margin-top: 10px;">
                @ErrorMessage
            </div>
        </EditorTemplate>
        <EditorFooterTemplate>
            <button id="saveButton" class="e-control e-btn e-primary" data-ripple="true" @onclick="CreateAndCloseModal">Save</button>
        </EditorFooterTemplate>
    </ScheduleTemplates>

    <ScheduleEventSettings TValue="FlatAppointmentDto" DataSource="@AppointmentList" EnableTooltip="true">
    </ScheduleEventSettings>
    <ScheduleViews>
        <ScheduleView Option="View.Day"></ScheduleView>
        <ScheduleView Option="View.Week"></ScheduleView>
        <ScheduleView Option="View.WorkWeek"></ScheduleView>
    </ScheduleViews>
</SfSchedule>

<!-- Hasta yoksa, yeni hasta kaydı oluşturma Modalı -->
<SfDialog Height="450px" Width="500px" IsModal="true" ShowCloseIcon="true" @bind-Visible="IsPatientDialogOpen" Header="Yeni Hasta Kaydı">
    <EditForm Model="@NewPatient" OnValidSubmit="CreatePatient">
        <DataAnnotationsValidator />
        <div class="mb-2">
            <SfTextBox Placeholder="FirstName" @bind-Value="NewPatient.FirstName" CssClass="e-field"></SfTextBox>
            <ValidationMessage For="@(() => NewPatient.FirstName)" />
        </div>
        <div class="mb-2">
            <SfTextBox Placeholder="LastName" @bind-Value="NewPatient.LastName" CssClass="e-field"></SfTextBox>
            <ValidationMessage For="@(() => NewPatient.LastName)" />
        </div>
        <div class="mb-2">
            <SfDatePicker TValue="DateTime" Placeholder="Doğum Tarihi" @bind-Value="NewPatient.BirthDate" CssClass="e-field"></SfDatePicker>
            <ValidationMessage For="@(() => NewPatient.BirthDate)" />
        </div>
        <div class="mb-2">
            <SfTextBox Placeholder="Identity Number" @bind-Value="NewPatient.IdentityNumber" CssClass="e-field"></SfTextBox>
            <ValidationMessage For="@(() => NewPatient.IdentityNumber)" />
        </div>
        <div class="mb-2">
            <SfTextBox Placeholder="Mobile Phone Number" @bind-Value="NewPatient.MobilePhoneNumber" CssClass="e-field"></SfTextBox>
            <ValidationMessage For="@(() => NewPatient.MobilePhoneNumber)" />
        </div>
        <div class="mb-2">
            <SfTextBox Placeholder="Email" @bind-Value="NewPatient.Email" CssClass="e-field"></SfTextBox>
            <ValidationMessage For="@(() => NewPatient.Email)" />
        </div>
        <div class="mb-2">
            <SfDropDownList DataSource="@GendersCollection"
                            Placeholder="Gender"
                            @bind-Value="@NewPatient.Gender">
                <DropDownListFieldSettings Value="Id" Text="DisplayName"></DropDownListFieldSettings>
            </SfDropDownList>
        </div>
        <div style="margin-top: 15px;">
            <button type="submit" class="e-btn e-success">Kaydet</button>
            <button type="button" class="e-btn e-danger" @onclick="ClosePatientDialog">İptal</button>
        </div>
    </EditForm>
</SfDialog>

<!-- Hasta Seçimi Modalı -->
<SfDialog @bind-Visible="IsPatientSelectionPopupVisible" Width="70%" ShowCloseIcon="true" HeaderText="Hasta Ara ve Seç">
    <Card>
        <CardBody>
            <!-- Hasta Arama Formu -->
            <Form id="PatientSearchForm" class="mb-3">
                <Row>
                    <Column ColumnSize="ColumnSize.Is3">
                        <Field>
                            <FieldLabel>@L["FirstName"]</FieldLabel>
                            <SfTextBox @bind-Value="@Filter.FirstName" @oninput="@OnSearchTextChanged" CssClass="e-input custom-rounded"></SfTextBox>
                        </Field>
                    </Column>
                    <Column ColumnSize="ColumnSize.Is3">
                        <Field>
                            <FieldLabel>@L["LastName"]</FieldLabel>
                            <SfTextBox @bind-Value="@Filter.LastName" @oninput="@OnSearchTextChanged" CssClass="e-input custom-rounded"></SfTextBox>
                        </Field>
                    </Column>
                    <Column ColumnSize="ColumnSize.Is3">
                        <Field>
                            <FieldLabel>@L["IdentityNumber"]</FieldLabel>
                            <SfTextBox Text="@Filter.IdentityNumber" @oninput="@OnSearchTextChanged" CssClass="e-input custom-rounded"></SfTextBox>
                        </Field>
                    </Column>
                </Row>
            </Form>

            <!-- Hasta Listesi -->
            <SfGrid DataSource="@PatientList" AllowPaging="true" AllowSelection="true">
                <GridPageSettings PageSize="5"></GridPageSettings>
                <GridColumns>
                    <GridColumn Field="Patient.No" HeaderText="@L["PatientNo"]" Width="150"></GridColumn>
                    <GridColumn Field="Patient.FirstName" HeaderText="@L["FirstName"]" Width="150"></GridColumn>
                    <GridColumn Field="Patient.LastName" HeaderText="@L["LastName"]" Width="150"></GridColumn>
                    <GridColumn Field="Patient.IdentityNumber" HeaderText="@L["IdentityNumber"]" Width="150"></GridColumn>
                    <GridColumn Width="100" HeaderText="@L["Select"]">
                        <Template>
                            <SfButton CssClass="e-primary" OnClick="() => SelectPatient((PatientWithNavigationPropertiesDto)context)">
                                @L["Select"]
                            </SfButton>
                        </Template>
                    </GridColumn>
                </GridColumns>
            </SfGrid>
        
    </CardBody>
</Card>
    <DialogPositionData X="200" Y="100" />
    <button class="e-btn e-primary" style="position: absolute; top: 120px; right: 120px;" @onclick="OpenPatientDialog">New Patient</button>
</SfDialog>

<style>
    .patient-card {
        border: 1px solid #ddd;
        border-radius: 10px;
        overflow: hidden;
        background-color: #f8f9fa; /* Hafif bir arka plan rengi */
        box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1); /* Hafif bir gölge efekti */
        max-width: 1100px; /* Kart genişliği */
        margin: auto; /* Ortala */
    }

        .patient-card .avatar {
            width: 90px; /* Avatar boyutu */
            height: 90px;
            object-fit: cover;
        }

        .patient-card .card-body {
            padding: 20px;
        }

        .patient-card h5 {
            font-size: 1.25rem;
            margin-bottom: 0.5rem;
        }

    .custom-dialog .e-dialog {
        top: 100px !important; /* Pop-up'ın üstten uzaklığı */
        transform: translate(-50%, 0) !important; /* Varsayılan merkezi hizalamayı düzelt */
    }

    .custom-dropdown .e-input {
        border-radius: 8px;
        border: 1px solid #ced4da;
        padding: 10px;
        font-size: 14px;
    }

    btn-primary {
        background-color: #007bff;
        border-color: #007bff;
        border-radius: 25px;
        transition: all 0.3s ease-in-out;
    }

        .btn-primary:hover {
            background-color: #0056b3;
            border-color: #0056b3;
            transform: scale(1.05);
        }
</style>