@page "/test-groups"
@using Pusula.Training.HealthCare.Permissions
@using Pusula.Training.HealthCare.Shared
@using Pusula.Training.HealthCare.TestGroupItems
@using Pusula.Training.HealthCare.TestGroups
@using Syncfusion.Blazor.Navigations
@using Microsoft.AspNetCore.Authorization


@inject ITestGroupItemsAppService TestGroupItemsAppService
@inject ITestGroupsAppService TestGroupsAppService

@*Add Modal*@
<SfButton CssClass="btn btn-primary btn-sm" Content="Test Ekle" OnClick="OpenCreateModal" />

<!-- Search Box -->
<SfToolbar>
    <SfTextBox Placeholder="Ara"
               FloatLabelType="FloatLabelType.Auto"
               @bind-Value="Filter.FilterText"
               Width="100%"
               Input="@(async (args) => await SearchAsync(args))">
    </SfTextBox>
</SfToolbar>

<div class="container-fluid">
    <div class="row g-0">
        <div class="col-2">
            <SfListView Width="100%" DataSource="@TestGroupNamesCollection" ShowHeader="true" HeaderTitle="Laboratuvar">
                <ListViewFieldSettings TValue="LookupDto<Guid>" Id="Id" Text="DisplayName"></ListViewFieldSettings>
            </SfListView>
        </div>
        <div class="col-10 m-0">

            @*Data Grid*@
            <SfGrid @ref="DefaultGrid" DataSource="@TestGroupItemsList" AllowPaging="true" AllowSorting="true" TotalItemsCount="@TotalCount">
                <GridColumns>
                    <GridColumn Field=@nameof(TestGroupItem.Code) HeaderText="Test Kodu" Width="25"></GridColumn>
                    <GridColumn HeaderText="Test Grubu" Width="30">
                        <Template>
                            @if (context is TestGroupItemDto testGroupItem)
                            {
                                var testGroupId = testGroupItem.TestGroupId;
                                <span>@GetTestGroupName(testGroupId)</span>
                            }
                        </Template>
                    </GridColumn>
                    <GridColumn Field=@nameof(TestGroupItem.Name) HeaderText="Test Adı" Width="100"></GridColumn>
                    <GridColumn Field=@nameof(TestGroupItem.TestType) HeaderText="Test Tipi" Width="30"></GridColumn>
                    <GridColumn Field=@nameof(TestGroupItem.TurnaroundTime) HeaderText="Tahmini Sonuçlanma Süresi" Width="25"></GridColumn>
                    <GridColumn Field=@nameof(TestGroupItem.Description) HeaderText="Açıklama" Width="25"></GridColumn>
                    <GridColumn HeaderText="Actions" Width="20">
                        <Template>
                            @if (context is TestGroupItemDto testGroupItem)
                            {
                                <div class="d-flex justify-content-center">
                                    <SfButton CssClass="e-success e-small" Content="Edit" OnClick="(() => OpenUpdateModal(testGroupItem))"></SfButton>
                                    <SfButton CssClass="e-danger e-small ml-2" Content="Delete" OnClick="(() => OpenDeleteModal(testGroupItem.Id))"></SfButton>
                                </div>
                            }
                        </Template>
                    </GridColumn>
                </GridColumns>
            </SfGrid>

            @*Create Modal*@
            <SfDialog @ref="CreateDialog" IsModal="true" ShowCloseIcon="true" Width="600px" Header="Yeni Test Ekle" Visible="false">
                <DialogTemplates>
                    <Content>
                        <EditForm Model="@CreateDto" OnValidSubmit="SaveChanges" class="needs-validation" novalidate>
                            <DataAnnotationsValidator />
                            <div class="row">
                                <div class="col-6">
                                    <label for="testGroup">Test Grubu</label>
                                    <SfDropDownList TItem="LookupDto<Guid>" TValue="Guid" DataSource="@TestGroupNamesCollection"
                                                    Placeholder="Test Grubu" @bind-Value="CreateDto.TestGroupId" CssClass="form-control">
                                        <DropDownListFieldSettings Text="DisplayName" Value="Id"></DropDownListFieldSettings>
                                    </SfDropDownList>
                                    <ValidationMessage For="@(() => CreateDto.TestGroupId)" CssClass="invalid-feedback" />
                                </div>
                                <div class="col-6">
                                    <label for="testName">Test Adı</label>
                                    <input type="text" id="testName" class="form-control" @bind="CreateDto.Name" placeholder="Test Adı" />
                                    <ValidationMessage For="@(() => CreateDto.Name)" CssClass="invalid-feedback" />
                                </div>
                            </div>
                            <div class="row mt-2">
                                <div class="col-6">
                                    <label for="testCode">Test Kodu</label>
                                    <input type="text" id="testCode" class="form-control" @bind="CreateDto.Code" placeholder="Test Kodu" />
                                    <ValidationMessage For="@(() => CreateDto.Code)" CssClass="invalid-feedback" />
                                </div>
                                <div class="col-6">
                                    <label for="testType">Test Tipi</label>
                                    <input type="text" id="testType" class="form-control" @bind="CreateDto.TestType" placeholder="Test Tipi" />
                                    <ValidationMessage For="@(() => CreateDto.TestType)" CssClass="invalid-feedback" />
                                </div>
                            </div>
                            <div class="row mt-2">
                                <div class="col-12">
                                    <label for="testDescription">Test Açıklaması</label>
                                    <textarea id="testDescription" class="form-control" rows="4" @bind="CreateDto.Description"
                                              placeholder="Test Açıklaması"></textarea>
                                    <ValidationMessage For="@(() => CreateDto.Description)" CssClass="invalid-feedback" />
                                </div>
                            </div>
                            <div class="row mt-2">
                                <div class="col-6">
                                    <label for="turnaroundTime">Tahmini Süre</label>
                                    <SfNumericTextBox TValue="int" Placeholder="Tahmini Süre" CssClass="form-control"
                                                      @bind-Value="CreateDto.TurnaroundTime" Min="0" />
                                    <ValidationMessage For="@(() => CreateDto.TurnaroundTime)" CssClass="invalid-feedback" />
                                </div>
                            </div>
                            <div class="row mt-2">
                                <div class="col-12 text-end">
                                    <button class="btn btn-success me-2" type="submit">Ekle</button>
                                    <button class="btn btn-secondary" type="button" @onclick="CloseCreateModal">İptal</button>
                                </div>
                            </div>
                        </EditForm>
                    </Content>
                </DialogTemplates>
            </SfDialog>

            @*Delete Modal*@
            <SfDialog @ref="DeleteDialog" IsModal="true" ShowCloseIcon="true" Width="300px" Header="Silme İşlemi" Visible="false">
                <DialogTemplates>
                    <Content>
                        <p>Silmek istediğinize emin misiniz?</p>
                    </Content>
                    <FooterTemplate>
                        <SfButton CssClass="btn btn-danger btn-sm" OnClick="ConfirmDelete">Evet</SfButton>
                        <SfButton CssClass="btn btn-primary btn-sm" OnClick="CloseDeleteModal">Hayır</SfButton>
                    </FooterTemplate>
                </DialogTemplates>
            </SfDialog>

            @*Update Modal*@
            <SfDialog @ref="UpdateDialog" IsModal="true" ShowCloseIcon="true" Width="600px" Header="Güncelleme" Visible="false">
                <DialogTemplates>
                    <Content>
                        <EditForm Model="@UpdateDto" OnValidSubmit="UpdateChanges" class="needs-validation" novalidate>
                            <DataAnnotationsValidator />
                            <div class="row">
                                <div class="col-6">
                                    <label for="testGroup">Test Grubu</label>
                                    <SfDropDownList TItem="LookupDto<Guid>" TValue="Guid" DataSource="@TestGroupNamesCollection"
                                                    Placeholder="Test Grubu" @bind-Value="UpdateDto.TestGroupId" CssClass="form-control">
                                        <DropDownListFieldSettings Text="DisplayName" Value="Id"></DropDownListFieldSettings>
                                    </SfDropDownList>
                                    <ValidationMessage For="@(() => UpdateDto.TestGroupId)" CssClass="invalid-feedback" />
                                </div>
                                <div class="col-6">
                                    <label for="testName">Test Adı</label>
                                    <input type="text" id="testName" class="form-control" @bind="UpdateDto.Name" placeholder="Test Adı" />
                                    <ValidationMessage For="@(() => UpdateDto.Name)" CssClass="invalid-feedback" />
                                </div>
                            </div>
                            <div class="row mt-2">
                                <div class="col-6">
                                    <label for="testCode">Test Kodu</label>
                                    <input type="text" id="testCode" class="form-control" @bind="UpdateDto.Code" placeholder="Test Kodu" />
                                    <ValidationMessage For="@(() => UpdateDto.Code)" CssClass="invalid-feedback" />
                                </div>
                                <div class="col-6">
                                    <label for="turnaroundTime">Test Süresi</label>
                                    <SfNumericTextBox TValue="int" Placeholder="Test Süresi" CssClass="form-control"
                                                      @bind-Value="UpdateDto.TurnaroundTime" Min="0" />
                                    <ValidationMessage For="@(() => UpdateDto.TurnaroundTime)" CssClass="invalid-feedback" />
                                </div>
                            </div>
                            <div class="row mt-2">
                                <div class="col-12">
                                    <label for="testDescription">Test Açıklaması</label>
                                    <textarea id="testDescription" class="form-control" rows="4" @bind="UpdateDto.Description"
                                              placeholder="Test Açıklaması"></textarea>
                                    <ValidationMessage For="@(() => UpdateDto.Description)" CssClass="invalid-feedback" />
                                </div>
                            </div>
                            <div class="row mt-2">
                                <div class="col-12 text-end">
                                    <button class="btn btn-success mb-2" type="submit">Kaydet</button>
                                </div>
                            </div>
                        </EditForm>
                    </Content>
                </DialogTemplates>
            </SfDialog>
        </div>
    </div>
</div>

@*  ****************** YAPILACAKLAR ******************
    - Styles .css altına taşınacak, sayfada olmayacak.
    - Listeleme uzunluğu sabitlenecek (full screen).
    - Test Grubu ekleme butonu olacak.
    - Searchbar css düzenlenecek.
    - LabGroups ve LabGroupItems Cache alınacak (inş.)
    - Test ekleme modalında required olmayan alanlar boş kalınca hata veriyor. Düzeltilecek.
*@

<style>
    .custom-button {
        width: 120px;
        margin-bottom: 10px;
        margin-left: auto;
        display: block;
    }

    .custom-form {
        display: flex;
        flex-direction: column;
        gap: 15px;
        margin-top: 15px;
    }

        .custom-form .form-buttons {
            display: flex;
            justify-content: flex-end;
            gap: 10px;
            margin-bottom: 15px;
        }

        .custom-form .e-input,
        .custom-form .e-numerictextbox,
        .custom-form .e-dropdownlist {
            width: 100%;
            border-radius: 4px;
        }

    .invalid-feedback {
        color: red;
        font-size: 0.875rem;
    }
</style>