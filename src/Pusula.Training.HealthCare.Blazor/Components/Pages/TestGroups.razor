@page "/test-groups"
@using Pusula.Training.HealthCare.Permissions
@using Pusula.Training.HealthCare.Shared
@using Pusula.Training.HealthCare.TestGroupItems
@using Pusula.Training.HealthCare.TestGroups
@using Syncfusion.Blazor.Grids.Internal
@using Syncfusion.Blazor.Navigations
@using Microsoft.AspNetCore.Authorization
@using Syncfusion.Blazor.Notifications


@inject ITestGroupItemsAppService TestGroupItemsAppService
@inject ITestGroupsAppService TestGroupsAppService


<div class="d-flex justify-content-between align-items-center p-3 border-bottom">
    @*Searchbox*@
    <div class="w-50">
        <SfTextBox Placeholder="Test Ara"
                   FloatLabelType="FloatLabelType.Never"
                   @bind-Value="TestGroupItemsFilter.FilterText"
                   Width="33%"
                   Input="@(async (args) => await SearchAsync(args))">
        </SfTextBox>
    </div>

    @*Add Items Button*@
    <div>
        <SfButton CssClass="e-medium e-success" Content="Test Ekle" OnClick="OpenTestGroupItemsCreateModal"></SfButton>

    @*Add Test Group Button*@

        <SfButton CssClass="e-medium e-success" Content="Test Grubu Ekle" OnClick="OpenTestGroupsCreateModal"></SfButton>
    </div>
</div>

@*Lab Groups List*@
<div class="container-fluid vh-100 d-flex flex-row">

    @*Sol Panel*@
    <SfGrid DataSource="@TestGroupsList" Width="100%" AllowPaging="false" AllowSorting="false" RowHeight="40">
        <GridColumns>
            <!-- Grup Adı Sütunu -->
            <GridColumn Field="@nameof(TestGroup.Name)" HeaderText="Test Grupları" Width="70">
                <Template Context="group">
                    @if (group is TestGroupDto testGroup)
                    {
                        <SfButton CssClass="e-link" Content="@testGroup.Name" OnClick="(() => LoadTestGroupItems(testGroup.Id))"></SfButton>
                    }
                </Template>
            </GridColumn>

            <GridColumn HeaderText="Actions" Width="30" TextAlign="TextAlign.Center">
                <Template>
                    @if (context is TestGroupDto testGroup)
                    {
                        <div class="d-flex justify-content-center">
                            <SfButton CssClass="e-small e-primary" IconCss="e-icons e-edit" OnClick="(() => OpenTestGroupUpdateModal(testGroup))"></SfButton>
                            <SfButton CssClass="e-small e-danger" IconCss="e-icons e-delete" OnClick="(() => OpenTestGroupDeleteModal(testGroup.Id))"></SfButton>
                        </div>
                    }
                </Template>
            </GridColumn>
        </GridColumns>
    </SfGrid>


    @*Sağ Panel*@
    <div class="col-10">
        @*Data Grid*@
        <SfGrid DataSource="@TestGroupItemsList" AllowPaging="true" AllowSorting="true" Height="100%" RowHeight="40">
            <GridColumns>
                <GridColumn Field=@nameof(TestGroupItem.Code) HeaderText="Test Kodu" Width="25"></GridColumn>
                <GridColumn HeaderText="Test Grubu" Width="25">
                    <Template>
                        @if (context is TestGroupItemDto testGroupItem)
                        {
                            var testGroupId = testGroupItem.TestGroupId;
                            <span>@GetTestGroupName(testGroupId)</span>
                        }
                    </Template>
                </GridColumn>
                <GridColumn Field=@nameof(TestGroupItem.Name) HeaderText="Test Adı" Width="100" TextAlign="TextAlign.Left"></GridColumn>
                <GridColumn Field=@nameof(TestGroupItem.TestType) HeaderText="Test Tipi" Width="25" TextAlign="TextAlign.Center"></GridColumn>
                <GridColumn Field=@nameof(TestGroupItem.TurnaroundTime) HeaderText="Tahmini Süre" Width="25" TextAlign="TextAlign.Center"></GridColumn>
                <GridColumn Field=@nameof(TestGroupItem.Description) HeaderText="Açıklama" Width="25" TextAlign="TextAlign.Center"></GridColumn>
                <GridColumn HeaderText="Actions" Width="30" TextAlign="TextAlign.Center">
                    <Template>
                        @if (context is TestGroupItemDto testGroupItem)
                        {
                            <div class="d-flex justify-content-center">
                                <SfButton CssClass="e-small e-primary" IconCss="e-icons e-edit" OnClick="(() => OpenTestGroupItemUpdateModal(testGroupItem))"></SfButton>
                                <SfButton CssClass="e-small e-danger" IconCss="e-icons e-delete" OnClick="(() => OpenTestGroupItemDeleteModal(testGroupItem.Id))"></SfButton>
                            </div>
                        }
                    </Template>
                </GridColumn>
            </GridColumns>
        </SfGrid>
    </div>
</div>

@*Create Test Group Items Form*@
<SfDialog @ref="CreateTestGroupItemsDialog" IsModal="true" ShowCloseIcon="true" Width="600px" Header="Test Ekle" Visible="false">
    <DialogTemplates>
        <Content>
            <EditForm Model="@CreateTestGroupItemsDto" OnValidSubmit="AddTestGroupItem" class="needs-validation" novalidate>
                <DataAnnotationsValidator />
                <div class="row">
                    <div class="col-6">
                        <label for="testGroup">Test Grubu</label>
                        <SfDropDownList TItem="LookupDto<Guid>" TValue="Guid" DataSource="@TestGroupNamesCollection"
                                        Placeholder="Test Grubu" @bind-Value="CreateTestGroupItemsDto.TestGroupId" CssClass="form-control">
                            <DropDownListFieldSettings Text="DisplayName" Value="Id"></DropDownListFieldSettings>
                        </SfDropDownList>
                        <ValidationMessage For="@(() => CreateTestGroupItemsDto.TestGroupId)" CssClass="invalid-feedback" />
                    </div>
                    <div class="col-6">
                        <label for="testName">Test Adı</label>
                        <input type="text" id="testName" class="form-control" @bind="CreateTestGroupItemsDto.Name" placeholder="Test Adı" />
                        <ValidationMessage For="@(() => CreateTestGroupItemsDto.Name)" CssClass="invalid-feedback" />
                    </div>
                </div>
                <div class="row mt-2">
                    <div class="col-6">
                        <label for="testCode">Test Kodu</label>
                        <input type="text" id="testCode" class="form-control" @bind="CreateTestGroupItemsDto.Code" placeholder="Test Kodu" />
                        <ValidationMessage For="@(() => CreateTestGroupItemsDto.Code)" CssClass="invalid-feedback" />
                    </div>
                    <div class="col-6">
                        <label for="testType">Test Tipi</label>
                        <input type="text" id="testType" class="form-control" @bind="CreateTestGroupItemsDto.TestType" placeholder="Test Tipi" />
                        <ValidationMessage For="@(() => CreateTestGroupItemsDto.TestType)" CssClass="invalid-feedback" />
                    </div>
                </div>
                <div class="row mt-2">
                    <div class="col-12">
                        <label for="testDescription">Test Açıklaması</label>
                        <textarea id="testDescription" class="form-control" rows="4" @bind="CreateTestGroupItemsDto.Description"
                                  placeholder="Test Açıklaması"></textarea>
                        <ValidationMessage For="@(() => CreateTestGroupItemsDto.Description)" CssClass="invalid-feedback" />
                    </div>
                </div>
                <div class="row mt-2">
                    <div class="col-6">
                        <label for="turnaroundTime">Tahmini Süre</label>
                        <input type="number" id="testType" class="form-control" @bind="CreateTestGroupItemsDto.TurnaroundTime" placeholder="Test Süresi" min="0" />
                        <ValidationMessage For="@(() => CreateTestGroupItemsDto.TurnaroundTime)" CssClass="invalid-feedback" />
                    </div>
                </div>
                <div class="row mt-2 mb-2">
                    <div class="col-12 text-end">
                        <SfButton CssClass="e-success e-medium m-1" Content="Kaydet" Type="Submit"></SfButton>
                        <SfButton CssClass="e-secondary e-medium m-1" Content="İptal" OnClick="CloseTestGroupItemCreateModal"></SfButton>
                    </div>
                </div>
            </EditForm>
        </Content>
    </DialogTemplates>
</SfDialog>

@*Create Test Groups Form*@
<SfDialog @ref="CreateTestGroupsDialog" IsModal="true" ShowCloseIcon="true" Width="300px" Header="Test Grubu Ekle" Visible="false">
    <DialogTemplates>
        <Content>
            <EditForm Model="@CreateTestGroupsDto" OnValidSubmit="AddTestGroup" class="needs-validation" novalidate>
                <DataAnnotationsValidator />
                <div class="row">
                    <div class="col-12">
                        <label for="testGroupName">Test Adı</label>
                        <input type="text" id="testGroupName" class="form-control" @bind="CreateTestGroupsDto.Name" placeholder="Test Grup Adı" />
                        <ValidationMessage For="@(() => CreateTestGroupsDto.Name)" CssClass="invalid-feedback" />
                    </div>
                </div>
                <div class="row mt-2 mb-2">
                    <div class="col-12 text-end">
                        <SfButton CssClass="e-success e-small m-1" Content="Kaydet" Type="Submit"></SfButton>
                        <SfButton CssClass="e-secondary e-small m-1" Content="İptal" OnClick="CloseTestGroupCreateModal"></SfButton>
                    </div>
                </div>
            </EditForm>
        </Content>
    </DialogTemplates>
</SfDialog>

@*Delete Test Group Items Modal*@
<SfDialog @ref="DeleteTestGroupItemsDialog" IsModal="true" ShowCloseIcon="true" Width="300px" Header="Silme İşlemi" Visible="false">
    <DialogTemplates>
        <Content>
            <p>Silmek istediğinize emin misiniz?</p>
        </Content>
        <FooterTemplate>
            <SfButton CssClass="e-small e-danger" OnClick="ConfirmTestGroupItemDelete">Evet</SfButton>
            <SfButton CssClass="e-small e-primary" OnClick="CloseTestGroupItemDeleteModal">Hayır</SfButton>
        </FooterTemplate>
    </DialogTemplates>
</SfDialog>

@*Delete Test Groups Modal*@
<SfDialog @ref="DeleteTestGroupsDialog" IsModal="true" ShowCloseIcon="true" Width="300px" Header="Test Silme" Visible="false">
    <DialogTemplates>
        <Content>
            <p>Silmek istediğinize emin misiniz?</p>
        </Content>
        <FooterTemplate>
            <SfButton CssClass="e-small e-danger" OnClick="ConfirmTestGroupDelete">Evet</SfButton>
            <SfButton CssClass="e-small e-primary" OnClick="CloseTestGroupDeleteModal">Hayır</SfButton>
        </FooterTemplate>
    </DialogTemplates>
</SfDialog>

@*Update Test Group Items Form*@
<SfDialog @ref="UpdateTestGroupItemsDialog" IsModal="true" ShowCloseIcon="true" Width="600px" Header="Test Güncelleme" Visible="false">
    <DialogTemplates>
        <Content>
            <EditForm Model="@UpdateTestGroupItemsDto" OnValidSubmit="UpdateTestGroupItem" class="needs-validation" novalidate>
                <DataAnnotationsValidator />
                <div class="row">
                    <div class="col-6">
                        <label for="testGroup">Test Grubu</label>
                        <select id="testGroupId" class="form-select" @bind="UpdateTestGroupItemsDto.TestGroupId">
                            @foreach (var group in TestGroupNamesCollection)
                            {
                                <option value="@group.Id">@group.DisplayName</option>
                            }
                        </select>
                        <ValidationMessage For="@(() => UpdateTestGroupItemsDto.TestGroupId)" CssClass="invalid-feedback" />
                    </div>
                    <div class="col-6">
                        <label for="testName">Test Adı</label>
                        <input type="text" id="testName" class="form-control" @bind="UpdateTestGroupItemsDto.Name" placeholder="Test Adı" />
                        <ValidationMessage For="@(() => UpdateTestGroupItemsDto.Name)" CssClass="invalid-feedback" />
                    </div>
                </div>
                <div class="row mt-2">
                    <div class="col-6">
                        <label for="testCode">Test Kodu</label>
                        <input type="text" id="testCode" class="form-control" @bind="UpdateTestGroupItemsDto.Code" placeholder="Test Kodu" />
                        <ValidationMessage For="@(() => UpdateTestGroupItemsDto.Code)" CssClass="invalid-feedback" />
                    </div>
                    <div class="col-6">
                            <label for="turnaroundTime">Tahmini Süre</label>
                        <input type="number" id="testType" class="form-control" @bind="UpdateTestGroupItemsDto.TurnaroundTime" placeholder="Test Süresi" min="0" />
                        <ValidationMessage For="@(() => UpdateTestGroupItemsDto.TurnaroundTime)" CssClass="invalid-feedback" />
                    </div>
                </div>
                <div class="row mt-2">
                    <div class="col-12">
                        <label for="testDescription">Test Açıklaması</label>
                        <textarea id="testDescription" class="form-control" rows="4" @bind="UpdateTestGroupItemsDto.Description"
                                  placeholder="Test Açıklaması"></textarea>
                        <ValidationMessage For="@(() => UpdateTestGroupItemsDto.Description)" CssClass="invalid-feedback" />
                    </div>
                </div>
                <div class="row mt-2">
                    <div class="col-12 text-end">
                        <SfButton CssClass="e-success e-medium m-2" Content="Kaydet" Type="Submit"></SfButton>
                        <SfButton CssClass="e-secondary e-medium m-2" Content="İptal" OnClick="CloseTestGroupItemUpdateModal"></SfButton>
                    </div>
                </div>
            </EditForm>
        </Content>
    </DialogTemplates>
</SfDialog>

@*Update Test Groups Form*@
<SfDialog @ref="UpdateTestGroupsDialog" IsModal="true" ShowCloseIcon="true" Width="300px" Header="Test Grubu Güncelleme" Visible="false">
    <DialogTemplates>
        <Content>
            <EditForm Model="@UpdateTestGroupsDto" OnValidSubmit="UpdateTestGroup" class="needs-validation" novalidate>
                <DataAnnotationsValidator />
                <div class="row">
                    <div class="col-12">
                        <label for="testGroupName">Test Adı</label>
                        <input type="text" id="testGroupName" class="form-control" @bind="UpdateTestGroupsDto.Name" placeholder="Test Grup Adı" />
                        <ValidationMessage For="@(() => UpdateTestGroupsDto.Name)" CssClass="invalid-feedback" />
                    </div>
                </div>
                <div class="row mt-2 mb-2">
                    <div class="col-12 text-end">
                        <SfButton CssClass="e-success e-small me-2" Content="Kaydet" Type="Submit"></SfButton>
                        <SfButton CssClass="e-secondary e-small" Content="İptal" OnClick="CloseTestGroupUpdateModal"></SfButton>
                    </div>
                </div>
            </EditForm>
        </Content>
    </DialogTemplates>
</SfDialog>

@*Toast*@
@* <SfToast @ref="ToastObj" Timeout="3000" Position="new Position { X = 'Right', Y = 'Top' }">
    <ToastTemplates>
        <Template>
            <div class="e-toast-content">@ErrorMessage</div>
        </Template>
    </ToastTemplates>
</SfToast> *@


@*  ****************** YAPILACAKLAR ******************
    - Styles .css altına taşınacak, sayfada olmayacak.
    - LabGroups ve LabGroupItems Cache alınacak (inş.)
    - Test ekleme modalında required olmayan alanlar boş kalınca hata veriyor. Düzeltilecek.
    - Validation mesaj css'i düzenlenecek.
    - Modallar ve formlar componente dönüştürülecek (çok tekrar var.)
    - Searchbox sayfada güzel bir şekilde konumlandırılacak.
*@

<style>
    /*      Syncfusion TextBox özelleştirmesi */
    .invalid-feedback {
        color: red;
        font-size: 0.875rem;
    }
</style>