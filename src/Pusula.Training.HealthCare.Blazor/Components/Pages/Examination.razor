@page "/examination/{protocolId:guid}/{patientId:guid}"
@using Pusula.Training.HealthCare.Patients
@using Pusula.Training.HealthCare.Anamneses
@using Pusula.Training.HealthCare.FallRisks
@using Pusula.Training.HealthCare.PshychologicalStates
@using Pusula.Training.HealthCare.PhysicalExaminations
@using Pusula.Training.HealthCare.PainDetails
@using Pusula.Training.HealthCare.Diagnoses
@using Pusula.Training.HealthCare.ExaminationDiagnoses
@using Pusula.Training.HealthCare.Protocols
@using Pusula.Training.HealthCare.SystemChecks
@using Pusula.Training.HealthCare.FollowUpPlans
@using Pusula.Training.HealthCare.FamilyHistories
@using Pusula.Training.HealthCare.ControlNotes
@using Pusula.Training.HealthCare.PatientHistories


@using Volo.Abp.Localization
@using Pusula.Training.HealthCare.Localization

@using Syncfusion.Blazor.Cards
@using Syncfusion.Blazor.DataForm
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Calendars
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.Notifications
@using Syncfusion.Blazor.Grids
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<HealthCareResource> Localizer
@inject IPatientsAppService PatientsAppService
@inject IAnamnesisAppService AnamnesisAppService
@inject IFallRisksAppService FallRiskAppService
@inject IPhysicalExaminationsAppService PhysicalExaminationAppService
@inject IPainDetailsAppService PainDetailAppService
@inject IDiagnosisAppService DiagnosisAppService
@inject IExaminationDiagnosisAppService ExaminationDiagnosisAppService
@inject IProtocolsAppService ProtocolAppService
@inject ISystemChecksAppService SystemCheckAppService
@inject IFollowUpPlansAppService FollowUpPlanAppService
@inject IFamilyHistoriesAppService FamilyHistoriesAppService
@inject IControlNotesAppService ControlNotesAppService
@inject IPshychologicalStatesAppService PsychologicalStateAppService
@inject IPatientHistoriesAppService PatientHistoriesAppService




<p>Protocol ID: @ProtocolId Patient ID: @PatientId</p>

@*Toast*@
<SfToast @ref="ToastObj" Width="300px">
    <ToastPosition X="Right" Y="Top"></ToastPosition>
</SfToast>


 <SfDialog 
    @bind-Visible="IsErrorModalOpen" 
    Width="400px" 
    ShowCloseIcon="true">

    <DialogTemplates>
        <!-- Header -->
        <Header>
            <div class="e-icon-settings">Doğrulama Hatası</div>
        </Header>

        <!-- Content -->
        <Content>
            <div class="dialogContent">
                <ul>
                    @foreach (var error in ValidationMessages)
                    {
                                <li>@error</li>
                    }
                </ul>
            </div>
        </Content>

        <!-- Footer -->
        <FooterTemplate>
            <SfButton OnClick="CloseErrorModal" CssClass="e-primary">Kapat</SfButton>
        </FooterTemplate>
    </DialogTemplates>

    <!-- Pozisyon Ayarları -->
    <DialogPositionData X="center" Y="top"></DialogPositionData>
</SfDialog>





<div class="patient-card-container">
    <SfCard CssClass="e-card e-card-horizontal patient-card">
        <div class="e-card-header">
            <div class="e-card-header-image">
                <!-- Placeholder bir görsel -->
                @* <img src="https://via.placeholder.com/50" alt="Patient" /> *@
                @* <img src="/icons/6833591.png" alt="Patient Avatar" /> *@
                <img src="/images/main/avatar.jpg" class="custom-avatar" alt="Patient Avatar" />
            </div>
            <div class="e-card-header-text">
                <!-- Hasta Adı ve Soyadı -->
                <h4>@($"{protocolDto.PatientFirstName} {protocolDto.PatientLastName}")</h4>
                <!-- Hasta Yaşı ve Doğum Tarihi -->
                <p>
                    <strong>Yaş:</strong> @CalculateAge(protocolDto.PatientBirthDate) |
                    <strong>Doğum Tarihi:</strong> @protocolDto.PatientBirthDate.ToString("dd.MM.yyyy")
                </p>
            </div>
        </div>
        <div class="e-card-content">
            <!-- Hasta No ve Ülke Bilgisi -->
            <p><strong>Hasta No:</strong> @protocolDto.PatientNo | <strong>Ülke:</strong> TR</p>
            <!-- Bölüm ve Doktor Bilgisi -->
            <p><strong>Bölüm:</strong>@protocolDto.DepartmentName</p>
            <p><strong>Doktor:</strong>@($"{protocolDto.DoctorTitleName} {protocolDto.DoctorName} {protocolDto.DoctorSurname}")</p>
        </div>
    </SfCard>
</div>

<!-- #endregion -->


<div class="container-fluid" style="height: 100vh;">
    <div class="row h-100">
        <!-- Sol Kolon -->
        <div class="col-md-6" style="overflow-y: auto; height: 100%; border-right: 1px solid #ddd; padding: 10px;">
            <!-- ANAMNESIS START -->
            <div class="mb-3">
                <SfCard CssClass="e-shadow position-relative">
                    <Syncfusion.Blazor.Cards.CardHeader>
                        <strong>Yakınması</strong>
                    </Syncfusion.Blazor.Cards.CardHeader>
                    <CardContent>
                        <div class="mb-3">
                            <SfTextBox @bind-Value="anamnesisDto.Complaint" Placeholder="Şikayeti" CssClass="form-control required-field" />
                        </div>
                        <div class="mb-3">
                            <p class="form-label">Başlangıç Tarihi</p>
                            <div class="d-flex align-items-center">
                                <SfNumericTextBox TValue="int" @bind-Value="durationValue" Placeholder="0" ShowSpinButton="false" />
                                <div class="btn-group me-2" role="group">
                                    <SfButton CssClass="@GetButtonClass("Saat")" @onclick='() => UpdateUnit("Saat")'>Saat</SfButton>
                                    <SfButton CssClass="@GetButtonClass("Gün")" @onclick='() => UpdateUnit("Gün")'>Gün</SfButton>
                                    <SfButton CssClass="@GetButtonClass("Hafta")" @onclick='() => UpdateUnit("Hafta")'>Hafta</SfButton>
                                    <SfButton CssClass="@GetButtonClass("Ay")" @onclick='() => UpdateUnit("Ay")'>Ay</SfButton>
                                    <SfButton CssClass="@GetButtonClass("Yıl")" @onclick='() => UpdateUnit("Yıl")'>Yıl</SfButton>
                                </div>
                                <span class="me-2">Önce</span>
                                <SfDatePicker TValue="DateTime" @bind-Value="anamnesisDto.StartDate" Placeholder="Tarih Seç" Max="DateTime.Now" />
                            </div>
                        </div>
                        <div class="mb-3">
                            <SfTextBox @bind-Value="anamnesisDto.Story" Placeholder="Öykü" CssClass="form-control required-field" />
                        </div>
                        <!-- Kaydet Butonu -->
                        <div class="text-end mt-3">
                            <SfButton CssClass="e-primary e-small save-button"
                                      IconCss="e-icons e-save"
                                      @onclick="SaveAnamnesisAsync">
                                Kaydet
                            </SfButton>
                        </div>
                    </CardContent>
                </SfCard>
            </div>
            <!-- ANAMNESIS END -->
            <!-- FAMILY HISTORY START -->
            <div class="mb-3">
                <SfCard CssClass="e-shadow">
                    <Syncfusion.Blazor.Cards.CardHeader>
                        <strong>Soygeçmiş</strong>
                    </Syncfusion.Blazor.Cards.CardHeader>
                    <CardContent>
                        <table class="table table-borderless" style="border-collapse: collapse; width: 100%;">
                            <tbody>
                                <!-- Anne Alanı -->
                                <tr>
                                    <td style="padding: 0; margin: 0; width: 15%;">
                                        <SfTextBox Readonly="true"
                                                   Value="Anne"
                                                   style="width: 100%; height: 30px; font-weight: bold; text-align: center;" />
                                    </td>
                                    <td style="padding: 0; margin: 0; width: 85%;">
                                        <SfTextBox Placeholder="Açıklama giriniz"
                                                   @bind-Value="familyHistoryDto.Mother"
                                                   style="width: 100%; height: 30px;" />
                                    </td>
                                </tr>
                                <!-- Baba Alanı -->
                                <tr>
                                    <td style="padding: 0; margin: 0; width: 15%;">
                                        <SfTextBox Readonly="true"
                                                   Value="Baba"
                                                   style="width: 100%; height: 30px; font-weight: bold; text-align: center;" />
                                    </td>
                                    <td style="padding: 0; margin: 0; width: 85%;">
                                        <SfTextBox Placeholder="Açıklama giriniz"
                                                   @bind-Value="familyHistoryDto.Father"
                                                   style="width: 100%; height: 30px;" />
                                    </td>
                                </tr>
                                <!-- Kiz kardes Alanı -->
                                <tr>
                                    <td style="padding: 0; margin: 0; width: 15%;">
                                        <SfTextBox Readonly="true"
                                                   Value="Kız Kardeş"
                                                   style="width: 100%; height: 30px; font-weight: bold; text-align: center;" />
                                    </td>
                                    <td style="padding: 0; margin: 0; width: 85%;">
                                        <SfTextBox Placeholder="Açıklama giriniz"
                                                   @bind-Value="familyHistoryDto.Sister"
                                                   style="width: 100%; height: 30px;" />
                                    </td>
                                </tr>
                                <!-- Erkek kardes Alanı -->
                                <tr>
                                    <td style="padding: 0; margin: 0; width: 15%;">
                                        <SfTextBox Readonly="true"
                                                   Value="Erkek Kardeş"
                                                   style="width: 100%; height: 30px; font-weight: bold; text-align: center;" />
                                    </td>
                                    <td style="padding: 0; margin: 0; width: 85%;">
                                        <SfTextBox Placeholder="Açıklama giriniz"
                                                   @bind-Value="familyHistoryDto.Brother"
                                                   style="width: 100%; height: 30px;" />
                                    </td>
                                </tr>
                                <!-- Diger  Alanı -->
                                <tr>
                                    <td style="padding: 0; margin: 0; width: 15%;">
                                        <SfTextBox Readonly="true"
                                                   Value="Diğer"
                                                   style="width: 100%; height: 30px; font-weight: bold; text-align: center;" />
                                    </td>
                                    <td style="padding: 0; margin: 0; width: 85%;">
                                        <SfTextBox Placeholder="Açıklama giriniz"
                                                   @bind-Value="familyHistoryDto.Other"
                                                   style="width: 100%; height: 30px;" />
                                    </td>
                                </tr>

                            </tbody>
                        </table>
                        <!-- Checkbox ve Yazı -->
                        <div style="margin-top: 10px; display: flex; align-items: center;">
                            <SfCheckBox TChecked="bool" @bind-Checked="familyHistoryDto.IsParentsRelative" />
                            <span style="margin-left: 5px;">Anne ve baba akraba mı?</span>
                        </div>
                        <!-- Kaydet Butonu -->
                        <div style="margin-top: 20px; text-align: right;">
                            <SfButton CssClass="e-primary" OnClick="SaveFamilyHistory">Kaydet</SfButton>
                        </div>
                    </CardContent>
                </SfCard>
            </div>
            <!-- FAMILY HISTORY END -->
            <!-- Özgeçmiş Kartı START BARAN2 -->
            <div class="mb-3">
                <SfCard CssClass="e-shadow">
                    <Syncfusion.Blazor.Cards.CardHeader>
                        @* <div class="d-flex justify-content-between align-items-center" style="width: 100%;">
                            <strong>Özgeçmiş</strong>
                            <span @onclick="OpenDetailsModal" style="cursor: pointer; color: #007bff; font-size: 0.9rem; text-decoration: none;">
                                Detaylar
                            </span>
                        </div> *@
                        <div class="d-flex justify-content-between align-items-center position-relative" style="width: 100%;">
                            <div class="position-relative required-label">
                                <strong>Özgeçmiş</strong>
                             </div>
                             <span @onclick="OpenDetailsModal" style="cursor: pointer; color: #007bff; font-size: 0.9rem; text-decoration: none;">
                                Detaylar
                             </span>
                        </div>
                    </Syncfusion.Blazor.Cards.CardHeader>
                    <Syncfusion.Blazor.Cards.CardContent>
                        <table class="table">
                            <tbody>
                                <!-- Alışkanlık -->
                                <tr>
                                    <td class="label-cell"><strong>Alışkanlıklar:</strong></td>
                                    <td>
                                        <SfTextArea Placeholder="Alışkanlıklarınızı giriniz..." @bind-Value="patientHistoryDto.Habit" CssClass="e-outline" RowCount="2" Width="100" ResizeMode='Resize.None'></SfTextArea>
                                    </td>
                                </tr>
                                <!-- Hastalık -->
                                <tr>
                                    <td class="label-cell"><strong>Hastalık:</strong></td>
                                    <td>
                                        <SfTextArea Placeholder="Hastalıklarınızı giriniz..." @bind-Value="patientHistoryDto.Disease" CssClass="e-outline required-field" RowCount="2" Width="100" ResizeMode='Resize.None'></SfTextArea>
                                    </td>
                                </tr>
                                <!-- Alerji -->
                                <tr>
                                    <td class="label-cell"><strong>Alerji:</strong></td>
                                    <td>
                                        <SfTextArea Placeholder="Alerjilerinizi giriniz..." @bind-Value="patientHistoryDto.Allergy" CssClass="e-outline  required-field" RowCount="2" Width="100" ResizeMode='Resize.None'></SfTextArea>
                                    </td>
                                </tr>
                                <!-- Ameliyat -->
                                <tr>
                                    <td class="label-cell"><strong>Ameliyat:</strong></td>
                                    <td>
                                        <SfTextArea Placeholder="Ameliyat geçmişinizi giriniz..." @bind-Value="patientHistoryDto.Operation  " CssClass="e-outline required-field" RowCount="2" Width="100" ResizeMode='Resize.None'></SfTextArea>
                                    </td>
                                </tr>
                            </tbody>
                        </table>

                        <!-- Çizgi ve Son Satır -->
                        <hr />
                        <div class="d-flex align-items-center">
                            <!-- Meslek Textbox -->
                            <SfTextBox Placeholder="Meslek" @bind-Value="patientHistoryDto.Job" CssClass="me-3"></SfTextBox>

                            <!-- Eğitim Seviyesi Dropdown -->

                            @*  <SfDropDownList Placeholder="Eğitim Seviyesi"
                                            DataSource="@EducationLevelsCollection" Value="@selectedEducationLevel">
                                <DropDownListFieldSettings Text="DisplayName" Value="Id" />
                            </SfDropDownList> *@
                            <SfDropDownList Placeholder="Eğitim Seviyesi"
                                            DataSource="@EducationLevelsCollection"
                                            @bind-Value="patientHistoryDto.EducationLevel">
                                <DropDownListFieldSettings Text="DisplayName" Value="Id" />
                            </SfDropDownList>

                            <!-- Medeni Durum -->
                            <span class="me-3"><strong>Medeni Durum:</strong></span>
                            <div class="d-flex">
                                <!-- Belirtilmemiş -->
                                <SfButton CssClass="@GetMaritalStatusButtonClass(MaritalStatus.Unspecified)"
                                          Content="Belirtilmemiş"
                                          @onclick="() => SetMaritalStatus(MaritalStatus.Unspecified)"
                                          Style="border-top-left-radius: 10px; border-bottom-left-radius: 10px;">
                                </SfButton>

                                <!-- Evli -->
                                <SfButton CssClass="@GetMaritalStatusButtonClass(MaritalStatus.Married)"
                                          Content="Evli"
                                          @onclick="() => SetMaritalStatus(MaritalStatus.Married)">
                                </SfButton>

                                <!-- Bekar -->
                                <SfButton CssClass="@GetMaritalStatusButtonClass(MaritalStatus.Single)"
                                          Content="Bekar"
                                          @onclick="() => SetMaritalStatus(MaritalStatus.Single)"
                                          Style="border-top-right-radius: 10px; border-bottom-right-radius: 10px;">
                                </SfButton>
                            </div>
                        </div>
                    </Syncfusion.Blazor.Cards.CardContent>
                    <!-- Kart Altına Kaydet Butonu -->
                    <!-- Kaydet Butonu -->
                    <div class="text-end mt-3">
                        <SfButton CssClass="e-primary e-small save-button"
                                  IconCss="e-icons e-save"
                                  OnClick="SavePatientHistoryAsync">
                            Kaydet
                        </SfButton>
                    </div>
                </SfCard>
            </div>
            <!-- Özgeçmiş Kartı END -->
            <!-- Sistem Sorgusu Kartı START -->
            <div class="mb-3">
                <SfCard CssClass="e-shadow">
                    <Syncfusion.Blazor.Cards.CardHeader>
                        <div class="d-flex justify-content-between align-items-center" style="width: 100%;">
                            <strong>Sistem Sorgusu</strong>
                            <span @onclick="OpenSystemCheckModal" style="cursor: pointer; color: #007bff; font-size: 0.9rem; text-decoration: none;">
                                Sistem Sorgulama
                            </span>
                        </div>
                    </Syncfusion.Blazor.Cards.CardHeader>

                    <CardContent>
                        <div class="mb-3">
                            <SfTextArea @bind-Value="systemCheckDto.Description" Placeholder="Açıklama" RowCount="2" Width="50"  />
                        </div>
                    </CardContent>
                </SfCard>
            </div>
            <!-- Sistem Sorgusu Kartı END -->
            <!-- Psychological State START -->
            <div class="mb-3">
                <SfCard CssClass="e-shadow">
                    <Syncfusion.Blazor.Cards.CardHeader>
                        <strong>Psikolojik Durum</strong>
                    </Syncfusion.Blazor.Cards.CardHeader>
                    <CardContent>
              @*           <div class="d-flex align-items-center mb-3">
                            <div class="btn-group me-3" role="group">
                                @foreach (var state in Enum.GetValues(typeof(MentalState)))
                                {

                                        <SfButton CssClass="@GetButtonClass((MentalState)state)"
                                                  @onclick="() => SetMentalState((MentalState)state)">
                                        @Localizer[$"Enum:MentalState.{state}"]
                                        </SfButton>
                                }
                            </div>
                            <SfTextBox @bind-Value="pshychologicalStateDto.Description" Placeholder="Açıklama" CssClass="form-control" Style="width: 100px;" />
                        </div> *@
                        <div class="d-flex align-items-center mb-3 position-relative">
                            <div class="btn-group me-3 required-label" role="group">
                                 @foreach (var state in Enum.GetValues(typeof(MentalState)))
                                 {
                                    <SfButton CssClass="@GetButtonClass((MentalState)state)"
                                        @onclick="() => SetMentalState((MentalState)state)">
                                        @Localizer[$"Enum:MentalState.{state}"]
                                    </SfButton>
                                 }
                            </div>
                          <SfTextBox @bind-Value="pshychologicalStateDto.Description" Placeholder="Açıklama" CssClass="form-control" Style="width: 100px;" />
                       </div>

                        <!-- Kaydet Butonu -->
                        <div class="text-end mt-3">
                            <SfButton CssClass="e-primary e-small save-button"
                                      IconCss="e-icons e-save"
                                      @onclick="SavePsychologicalStateAsync">
                                Kaydet
                            </SfButton>
                        </div>
                    </CardContent>
                </SfCard>
            </div>
            <!-- Psychological State END -->
            <!-- Fallrisk START -->
            <div class="mb-3">
                <SfCard CssClass="e-shadow" Style="padding: 10px;">
                    <CardContent>
                        <div class="d-flex align-items-center justify-content-between">
                            <strong style="margin-right: auto;">Düşme Riski</strong>
                            @if (isFallRisk)
                            {
                                    <div class="d-flex align-items-center me-3">
                                        <SfTextBox @bind-Value="fallRiskDto.Description" Placeholder="Açıklama" CssClass="me-2" OnBlur="@UpdateDescriptionAndScoreAsync" />

                                        <strong class="me-2">Skor</strong>
                                        <SfNumericTextBox TValue="int" @bind-Value="fallRiskDto.Score" Placeholder="Skor" ShowSpinButton="false" CssClass="me-2" Max=10 OnBlur="@UpdateDescriptionAndScoreAsync" />
                                    </div>
                            }
                            <div class="btn-group" role="group">
                                <SfButton CssClass="@(isFallRisk ? "e-primary required-label" : "e-outline required-label")" 
                                    @onclick="() => SetFallRisk(true)">
                                    Var
                                </SfButton>
                                <SfButton CssClass="@(isFallRisk ? "e-outline" : "e-primary")" @onclick="() => SetFallRisk(false)">Yok</SfButton>
                            </div>
                        </div>
                    </CardContent>
                </SfCard>
            </div>
            <!-- Fallrisk END -->
            <!-- Ağrı Kartı START -->
            <div class="mb-3">
                <SfCard CssClass="e-shadow">
                    <CardContent>
                        <!-- İlk Satır: Ağrı, Bölge TextBox, Skor NumericTextBox ve Var/Yok Butonları -->
                        <div class="d-flex align-items-center">
                            <strong style="margin-right: 10px;">Ağrı</strong>
                            @if (isPain)
                            {
                                    <!-- Bölge TextBox -->
                                    <SfTextBox @bind-Value="painDetailDto.Area" Placeholder="Bölge" CssClass="me-2 required-field" />

                                    <strong style="margin-right: 10px;">Skor</strong>

                                    <!-- Skor NumericTextBox -->
                                    <SfNumericTextBox @bind-Value="painDetailDto.Score" TValue="int" Placeholder="Skor" ShowSpinButton="false" CssClass="me-2" Max="10" />

                                    <!-- Açıklama TextBox -->
                                    <SfTextBox @bind-Value="painDetailDto.Description" Placeholder="Açıklama" CssClass="me-2" />
                            }

                            <!-- "Var" ve "Yok" Butonları -->
                            <div class="btn-group ms-3" role="group">
                                <SfButton CssClass="@(isPain ? "e-primary" : "e-outline")" @onclick="() => SetPain(true)">Var</SfButton>
                                <SfButton CssClass="@(isPain ? "e-outline" : "e-primary")" @onclick="() => SetPain(false)">Yok</SfButton>
                            </div>
                        </div>

                        <!-- İkinci Satır: Ağrı Türü Butonları -->
                        @if (isPain)
                        {
                                <!-- Ağrı Niteliği Label ve Butonlar -->
                                <div class="d-flex align-items-center flex-wrap mt-3">
                                    <label class="form-label me-2">Ağrı Niteliği</label>
                                    <div class="btn-group d-flex flex-wrap" role="group">
                                    @foreach (var painType in painTypes)
                                    {
                                                <SfButton CssClass="@GetPainTypeButtonClass(painType.Id)" @onclick="() => SetPainType(painType.Id)">
                                            @* @bind-Value="painDetailDto.PainTypeId" *@
                                            @painType.DisplayName
                                                </SfButton>
                                    }
                                    </div>
                                </div>
                        }

                        <!-- Üçüncü Satır: Diğer Bölge için TextBox -->
                        @if (isPain)
                        {
                                <div class="mb-3">
                                    <SfTextBox @bind-Value="painDetailDto.OtherPain" Placeholder="Diğer" CssClass="form-control" />
                                </div>
                        }

                        <!-- Dördüncü Satır: Ağrı Ritmi, Ağrı Başlangıcı ve Süre Alanları -->
                        @if (isPain)
                        {
                                <!-- Ağrı Ritmi -->
                                <div class="d-flex align-items-center mt-3">
                                    <label class="form-label me-2">Ağrı Ritmi</label>

                                    <div class="btn-group" role="group">
                                    @foreach (var rhythm in Enum.GetValues(typeof(PainRhythm)))
                                    {
                                                <SfButton CssClass="@GetPainRhythmButtonClass((PainRhythm)rhythm)"
                                                          @onclick="() => SetPainRhythm((PainRhythm)rhythm)">
                                            @Localizer[$"Enum:PainRhythm.{rhythm}"]
                                                </SfButton>
                                    }
                                    </div>
                                </div>

                                <!-- Ağrı Başlangıcı -->
                                <div class="d-flex align-items-center mt-3">
                                    <label class="form-label me-2">Ağrı Başlangıcı</label>

                                    <!-- Süre NumericTextBox -->
                                    <SfNumericTextBox TValue="int" @bind-Value="painDurationValue" Placeholder="Süre" ShowSpinButton="false" CssClass="me-2" @onchange="UpdatePainStartDate" />

                                    <!-- Zaman Seçim Dropdown -->
                                    <SfDropDownList TValue="string" TItem="string" @bind-Value="painSelectedUnit" DataSource="@timeUnits" Placeholder="Seç" CssClass="me-2" />

                                    <!-- Önce Yazısı -->
                                    <span class="ms-2">Önce</span>
                                </div>

                                <!-- DateTime Picker (güncellenmiş tarih) -->
                                <div class="d-flex align-items-center mt-3">
                                    <SfDatePicker TValue="DateTime" @bind-Value="painStartDate" Placeholder="Tarih Seç" CssClass="me-2" />
                                </div>

                                <!-- Kaydet Butonu -->
                                <div class="d-flex justify-content-end mt-4">
                                    <SfButton CssClass="e-primary" @onclick="SavePainDetailAsync">Kaydet</SfButton>
                                </div>
                        }
                    </CardContent>
                </SfCard>
            </div>
            <!-- Ağrı Kartı END -->
        </div>

        <!-- Sağ Kolon -->
        <div class="col-md-6" style="overflow-y: auto; height: 100%; padding: 10px;">
            <!-- FIZIKSEL MUAYENE START -->
            <div class="mb-3">
                <SfCard CssClass="e-shadow physical-examination">
                    <div class="d-flex align-items-center justify-content-start" style="padding: 10px;">
                        <strong>Fizik Muayene Bulguları</strong>
                    </div>
                    <CardContent>
                        <!-- Ölçüm Alanları -->
                        <div class="row align-items-center mb-3 text-center">
                            <!-- Ağırlık -->
                            <div class="col">
                                <label for="weight" class="form-label">Ağırlık (kg)</label>
                                <SfNumericTextBox TValue="decimal?" @bind-Value="physicalExaminationDto.Weight" CssClass="form-control custom-input" Id="weight" ShowSpinButton="false" />
                            </div>

                            <!-- Boy -->
                            <div class="col">
                                <label for="height" class="form-label">Boy (cm)</label>
                                <SfNumericTextBox TValue="decimal?" @bind-Value="physicalExaminationDto.Height" CssClass="form-control custom-input" Id="height" ShowSpinButton="false" />
                            </div>

                            <!-- VKİ -->
                            <div class="col">
                                <label for="bmi" class="form-label">VKİ</label>
                                <SfNumericTextBox TValue="decimal?" @bind-Value="physicalExaminationDto.BMI" CssClass="form-control custom-input" Id="bmi" ShowSpinButton="false" Readonly="true" />
                            </div>

                            <!-- VYA -->
                            <div class="col">
                                <label for="vya" class="form-label">VYA</label>
                                <SfNumericTextBox TValue="decimal?" @bind-Value="physicalExaminationDto.VYA" CssClass="form-control custom-input" Id="vya" ShowSpinButton="false" Readonly="true" />
                            </div>

                            <!-- Ateş -->
                            <div class="col">
                                <label for="temperature" class="form-label">Ateş (°C)</label>
                                <SfNumericTextBox TValue="decimal?" @bind-Value="physicalExaminationDto.Temperature" CssClass="form-control custom-input" Id="temperature" ShowSpinButton="false" />
                            </div>

                            <!-- Nabız -->
                            <div class="col">
                                <label for="pulse" class="form-label">Nabız</label>
                                <SfNumericTextBox TValue="int?" @bind-Value="physicalExaminationDto.Pulse" CssClass="form-control custom-input" Id="pulse" ShowSpinButton="false" />
                            </div>

                            <!-- Sistolik Kan Basıncı -->
                            <div class="col">
                                <label for="systolicBP" class="form-label">KB-S</label>
                                <SfNumericTextBox TValue="int?" @bind-Value="physicalExaminationDto.SystolicBP" CssClass="form-control custom-input" Id="systolicBP" ShowSpinButton="false" />
                            </div>

                            <!-- Diyastolik Kan Basıncı -->
                            <div class="col">
                                <label for="diastolicBP" class="form-label">KB-D</label>
                                <SfNumericTextBox TValue="int?" @bind-Value="physicalExaminationDto.DiastolicBP" CssClass="form-control custom-input" Id="diastolicBP" ShowSpinButton="false" />
                            </div>

                            <!-- SPO2 -->
                            <div class="col">
                                <label for="spo2" class="form-label">SPO2</label>
                                <SfNumericTextBox TValue="int?" @bind-Value="physicalExaminationDto.SPO2" CssClass="form-control custom-input" Id="spo2" ShowSpinButton="false" />
                            </div>
                        </div>

                        <!-- Not -->
                        <div class="mb-3">
                            <SfTextBox @bind-Value="physicalExaminationDto.Note" Placeholder="Not" CssClass="form-control" />
                        </div>

                        @*  <!-- Kaydet Butonu -->
                        <div class="text-end">
                        <SfButton CssClass="e-primary" @onclick="SavePhysicalExaminationAsync">Kaydet</SfButton>
                        </div> *@

                        <!-- Güncelleme Butonu -->
                        <SfButton CssClass="e-primary" @onclick="SavePhysicalExaminationAsync">
                            @if (isExistingPhysicalExamination)
                            {
                                    <span>Güncelle</span>
                            }
                            else
                            {
                                    <span>Kaydet</span>
                            }
                        </SfButton>
                    </CardContent>
                </SfCard>
            </div>
            <!-- FIZIKSEL MUAYENE END -->
            <!-- Tanılar (ICD-10) Kartı START -->
            <div class="mb-3">
                <SfCard CssClass="e-shadow">
                    <Syncfusion.Blazor.Cards.CardHeader>
                        <div style="display: flex; justify-content: flex-start; padding: 10px;">
                            <strong>Tanılar (ICD-10)</strong>
                        </div>
                    </Syncfusion.Blazor.Cards.CardHeader>
                    <CardContent>
                        <div class="d-flex align-items-center justify-content-between">
                            <!-- Dropdown -->
                            <SfDropDownList TValue="Guid"
                                            Placeholder="Tanı seçiniz"
                                            TItem="Pusula.Training.HealthCare.Shared.LookupDto<Guid>"
                                            Width="300px"
                                            @bind-Value="@SelectedDiagnosisId"
                                            DataSource="@IcdList">
                                <DropDownListFieldSettings Value="Id" Text="DisplayName"></DropDownListFieldSettings>
                            </SfDropDownList>

                            <!-- Butonlar -->
                            <div class="btn-group ms-3" role="group">
                                @*   @foreach (var type in Enum.GetValues(typeof(DiagnosisType)))
                                {
                                <SfButton CssClass="@GetDiagnosisTypeButtonClass((DiagnosisType)type)"
                                @onclick="() => SetDiagnosisType((DiagnosisType)type)">
                                @type
                                </SfButton>
                                } *@

                                <div class="btn-group ms-3" role="group">
                                    <SfButton CssClass="@GetDiagnosisTypeButtonClass(DiagnosisType.Definitive)"
                                              @onclick="() => SetDiagnosisType(DiagnosisType.Definitive)">
                                        @Localizer["DiagnosisType:Definitive"]
                                    </SfButton>

                                    <SfButton CssClass="@GetDiagnosisTypeButtonClass(DiagnosisType.Preliminary)"
                                              @onclick="() => SetDiagnosisType(DiagnosisType.Preliminary)">
                                        @Localizer["DiagnosisType:Preliminary"]
                                    </SfButton>

                                    <SfButton CssClass="@GetDiagnosisTypeButtonClass(DiagnosisType.Differential)"
                                              @onclick="() => SetDiagnosisType(DiagnosisType.Differential)">
                                        @Localizer["DiagnosisType:Differential"]
                                    </SfButton>
                                </div>

                            </div>
                        </div>

                        <!-- İkinci Satır: DatePicker ve TextBox -->
                        <div class="d-flex align-items-center justify-content-between mt-3">
                            <!-- DatePicker -->
                            <SfDatePicker TValue="DateTime" Placeholder="İlk Tanı Tarihi"
                                          CssClass="form-control"
                                          @bind-Value="DiagnosisDate" />

                            <!-- TextBox -->
                            <SfTextBox Placeholder="Açıklama"
                                       CssClass="form-control ms-3" Style="width: 300px;"
                                       @bind-Value="Description" />
                        </div>

                        <!-- Ekle Butonu -->
                        <div class="d-flex justify-content-end mt-3">
                            <SfButton CssClass="btn-primary" @onclick="CreateExaminationDiagnosis">
                                Ekle
                            </SfButton>
                        </div>

                        @if (ExaminationDiagnoses.Any())
                        {
                                <SfGrid DataSource="@ExaminationDiagnoses" AllowPaging="false" AllowSorting="true">
                                    <GridColumns>
                                        <GridColumn Field="Diagnosis.Code" HeaderText="Kodu" Width="90"></GridColumn>
                                        <GridColumn Field="Diagnosis.Name" HeaderText="Adı" Width="90"></GridColumn>
                                        <GridColumn Field="ExaminationDiagnosis.InitialDate" HeaderText="İlk Tanı Tarihi" Width="100" Format="dd.MM.yyyy"></GridColumn>
                                        <GridColumn Field="ExaminationDiagnosis.DiagnosisType" HeaderText="Tanı Tipi" Width="100"></GridColumn>
                                        <GridColumn Field="ExaminationDiagnosis.Note" HeaderText="Açıklama" Width="100"></GridColumn>

                                        <!-- Silme Butonu -->
                                        <GridColumn HeaderText="İşlem" Width="100">
                                            <Template>
                                            @{
                                                var item = (ExaminationDiagnosisWithNavigationPropertiesDto)@context;
                                            }
                                                <SfButton CssClass="btn-danger btn-sm" @onclick="(() => DeleteExaminationDiagnosis(item.ExaminationDiagnosis.Id))">
                                                    Sil
                                                </SfButton>
                                            </Template>
                                        </GridColumn>
                                    </GridColumns>
                                </SfGrid>
                        }
                        else
                        {
                                <p>Hiç kayıt bulunamadı.</p>
                        }

                    </CardContent>
                </SfCard>
            </div>
            <!-- Tanılar (ICD-10) Kartı END -->
            <!-- İzlem Plan Kartı START -->
            <div class="mb-3">
                <SfCard CssClass="e-shadow">

                    <Syncfusion.Blazor.Cards.CardHeader>
                        <div style="display: flex; justify-content: flex-start; padding: 10px;">
                            <strong>İzlem ve Plan</strong>
                        </div>
                    </Syncfusion.Blazor.Cards.CardHeader>


                    <CardContent>
                        <!-- acıklama Alanı -->
                        <div class="mb-3">
                            <SfTextBox Placeholder="Tedavi notu" CssClass="followUp-textbox" @bind-Value="followUpPlanDto.Note"> </SfTextBox>
                        </div>

                        <div class="btn-group me-3" role="group" style="display: flex; flex-wrap: wrap; gap: 8px;">
                            @foreach (var type in Enum.GetValues(typeof(FollowUpType)))
                            {
                                    <SfButton CssClass="@GetButtonClass((FollowUpType)type)"
                                              @onclick="() => SetFollowUpType((FollowUpType)type)"
                                              Style="margin-bottom: 4px; border-radius: 10px;">
                                    @Localizer[$"Enum:FollowUpType.{type}"]
                                    </SfButton>
                            }
                        </div>

                        <div class="mb-3">
                            <!-- Başlık ve Buton Grubu Aynı Satırda -->
                            <div class="d-flex align-items-center justify-content-start gap-3">
                                <!-- Başlık -->
                                <strong>Ameliyat Planlanacak mı?</strong>

                                <!-- Buton Grubu -->
                                <div class="btn-group" role="group">
                                    <SfButton CssClass="@($"btn-left {GetSurgeryButtonClass(true)}")"
                                              @onclick="() => SetSurgeryPlan(true)">
                                        Evet
                                    </SfButton>

                                    <SfButton CssClass="@($"btn-right {GetSurgeryButtonClass(false)}")"
                                              @onclick="() => SetSurgeryPlan(false)">
                                        Hayır
                                    </SfButton>
                                </div>
                            </div>
                        </div>

                        <!-- Kaydet Butonu -->
                        <div class="text-end mt-3">
                            <SfButton CssClass="e-primary" @onclick="SaveFollowUpPlan">
                                Kaydet
                            </SfButton>
                        </div>

                    </CardContent>
                </SfCard>
            </div>
            <!-- İzlem Plan Kartı END -->
            <!-- Kontrol Notları Kartı START -->
            <div class="mb-3">
                <SfCard CssClass="e-shadow">
                    <!-- Header -->
                    <Syncfusion.Blazor.Cards.CardHeader>
                        <div style="display: flex; justify-content: flex-start; padding: 10px;">
                            <strong>Kontrol Notları</strong>
                        </div>
                    </Syncfusion.Blazor.Cards.CardHeader>

                    <CardContent>
                        <!-- Tarih ve Not Alanı -->
                        <div class="d-flex align-items-start gap-3">
                            <!-- Tarih Seçici -->
                            <div>
                                <SfDatePicker TValue="DateTime"
                                              Placeholder="Tarih seçiniz"
                                              CssClass="controlnotes-datepicker"
                                              @bind-Value="controlNoteCreateDto.NoteDate">
                                </SfDatePicker>
                            </div>

                            <!-- Not Alanı -->
                            <div style="flex-grow: 1;">
                                <SfTextArea Placeholder="Kontrol notu"
                                            CssClass="controlnotes-textbox"
                                            @bind-Value="controlNoteCreateDto.Note">
                                </SfTextArea>
                            </div>
                        </div>

                        <!-- Butonlar -->
                        <div class="d-flex align-items-center justify-content-between mt-3">
                            <!-- Grid Aç/Kapat Butonu -->
                            <SfButton CssClass="e-info"
                                      IconCss="@GetToggleIcon()"
                                      @onclick="ToggleGrid">
                                @((isGridVisible ? "Notları Kapat" : "Notları Aç"))
                            </SfButton>

                            <!-- Yeni Ekle Butonu -->
                            <SfButton CssClass="e-primary"
                                      @onclick="CreateControlNoteAsync">
                                Yeni Ekle
                            </SfButton>
                        </div>

                        <!-- Grid Bölümü -->
                        @if (isGridVisible)
                        {
                                <div class="mt-4">
                                    <SfGrid DataSource="@controlNotes"
                                            AllowSorting="true"
                                            Height="250px">
                                        <GridColumns>
                                            <!-- Tarih Kolonu -->
                                            <GridColumn Field="NoteDate"
                                                        HeaderText="Tarih"
                                                        Format="dd.MM.yyyy"
                                                        Width="120">
                                            </GridColumn>

                                            <!-- Notlar için Buton -->
                                            <GridColumn HeaderText="Notlar"
                                                        Width="120"
                                                        TextAlign="TextAlign.Center">
                                                <Template Context="item">
                                                @if (!string.IsNullOrEmpty((item as ControlNoteDto)?.Note))
                                                {
                                                            <SfButton CssClass="e-small e-link"
                                                                      OnClick="(() => OpenNoteModal((item as ControlNoteDto)?.Note))">
                                                                <i class="fa-regular fa-file"></i>
                                                            </SfButton>
                                                }
                                                </Template>
                                            </GridColumn>

                                            <!-- Oluşturan Kolonu -->
                                            <GridColumn HeaderText="Oluşturan"
                                                        Width="250">
                                                <Template>
                                                @if (!string.IsNullOrEmpty(((ControlNoteDto)context).CreatorTitle) ||
                                            !string.IsNullOrEmpty(((ControlNoteDto)context).CreatorName) ||
                                            !string.IsNullOrEmpty(((ControlNoteDto)context).CreatorSurname))
                                                {
                                                            <span>
                                                        @(((ControlNoteDto)context).CreatorTitle ?? "")
                                                        @(((ControlNoteDto)context).CreatorName ?? "")
                                                        @(((ControlNoteDto)context).CreatorSurname ?? "")
                                                            </span>
                                                }
                                                else
                                                {
                                                            <span>Bilinmiyor</span>
                                                }
                                                </Template>
                                            </GridColumn>

                                            <!-- Aksiyonlar Kolonu -->
                                            <GridColumn Width="30" TextAlign="TextAlign.Center">
                                                <Template Context="context">
                                                @if (context is ControlNoteDto controlNote)
                                                {
                                                            <div class="d-flex justify-content-center">
                                                                <!-- Silme Butonu -->
                                                                <SfButton CssClass="e-small e-link"
                                                                          IconCss="e-icons e-delete"
                                                                          OnClick="(() => OpenControlNoteDeleteModal(controlNote.Id))">
                                                                </SfButton>
                                                            </div>
                                                }
                                                </Template>
                                            </GridColumn>
                                        </GridColumns>
                                    </SfGrid>
                                </div>
                        }
                    </CardContent>
                </SfCard>
            </div>
            <!-- Kontrol Notları Kartı END -->
        </div>
    </div>
</div>

<!---------------- Fallrisk  MODAL START ----------------->
<SfDialog @bind-Visible="isFallRiskModalOpen" Width="400px" Header="Düşme Riski Detayları" IsModal="true" ShowCloseIcon="true" CloseOnEscape="true">
    <DialogTemplates>
        <Content>
            <div class="mb-3">
                <p class="form-label">Düşme Hikayesi</p>
                <div class="btn-group" role="group">


                    <SfButton CssClass="@(fallRiskDto.HasFallHistory ? "e-primary" : "e-outline")"
                              @onclick="() => SetHasFallHistory(true)">
                        Var
                    </SfButton>
                    <SfButton CssClass="@(fallRiskDto.HasFallHistory == false ? "e-primary" : "e-outline")"
                              @onclick="() => SetHasFallHistory(false)">
                        Yok
                    </SfButton>
                </div>
            </div>

            <!-- Kullanılan İlaçlar -->
            <div class="mb-3">
                <p class="form-label">Kullandığı İlaçlar</p>
                <div class="btn-group" role="group">
                    <SfButton CssClass="@(fallRiskDto.UsesMedications ? "e-primary" : "e-outline")"
                              @onclick="() => SetUsesMedications(true)">
                        Var
                    </SfButton>
                    <SfButton CssClass="@(fallRiskDto.UsesMedications == false ? "e-primary" : "e-outline")"
                              @onclick="() => SetUsesMedications(false)">
                        Yok
                    </SfButton>
                </div>
            </div>

            <!-- Bağımlılık Durumu -->
            <div class="mb-3">
                <p class="form-label">Bağımlılık Durumu</p>
                <div class="btn-group" role="group">
                    <SfButton CssClass="@(fallRiskDto.HasAddiction ? "e-primary" : "e-outline")"
                              @onclick="() => SetHasAddiction(true)">
                        Var
                    </SfButton>
                    <SfButton CssClass="@(fallRiskDto.HasAddiction == false ? "e-primary" : "e-outline")"
                              @onclick="() => SetHasAddiction(false)">
                        Yok
                    </SfButton>
                </div>
            </div>

            <!-- Denge Bozukluğu -->
            <div class="mb-3">
                <p class="form-label">Denge Bozukluğu</p>
                <div class="btn-group" role="group">
                    <SfButton CssClass="@(fallRiskDto.HasBalanceDisorder ? "e-primary" : "e-outline")"
                              @onclick="() => SetHasBalanceDisorder(true)">
                        Var
                    </SfButton>
                    <SfButton CssClass="@(fallRiskDto.HasBalanceDisorder == false ? "e-primary" : "e-outline")"
                              @onclick="() => SetHasBalanceDisorder(false)">
                        Yok
                    </SfButton>
                </div>
            </div>

            <!-- Görme Bozukluğu -->
            <div class="mb-3">
                <p class="form-label">Görme Bozukluğu</p>
                <div class="btn-group" role="group">
                    <SfButton CssClass="@(fallRiskDto.HasVisionImpairment ? "e-primary" : "e-outline")"
                              @onclick="() => SetHasVisionImpairment(true)">
                        Var
                    </SfButton>
                    <SfButton CssClass="@(fallRiskDto.HasVisionImpairment == false ? "e-primary" : "e-outline")"
                              @onclick="() => SetHasVisionImpairment(false)">
                        Yok
                    </SfButton>
                </div>
            </div>

            <!-- Mental Durum -->
            <div class="mb-3">
                <p class="form-label">Mental Durum</p>
                <div class="btn-group" role="group">
                    <SfButton CssClass="@(fallRiskDto.MentalState ? "e-primary" : "e-outline")"
                              @onclick="() => SetMentalState(true)">
                        Oryante
                    </SfButton>
                    <SfButton CssClass="@(fallRiskDto.MentalState == false ? "e-primary" : "e-outline")"
                              @onclick="() => SetMentalState(false)">
                        Oryante Değil
                    </SfButton>
                </div>
            </div>

            <!-- Genel Sağlık Durumu -->
            <div class="mb-3">
                <p class="form-label">Genel Sağlık Durumu</p>
                <div class="btn-group" role="group">
                    <SfButton CssClass="@(fallRiskDto.GeneralHealthState ? "e-primary" : "e-outline")"
                              @onclick="() => SetGeneralHealthState(true)">
                        Normal
                    </SfButton>
                    <SfButton CssClass="@(fallRiskDto.GeneralHealthState == false ? "e-primary" : "e-outline")"
                              @onclick="() => SetGeneralHealthState(false)">
                        Normal Değil
                    </SfButton>
                </div>
            </div>


            <!-- Kaydet Butonu -->
            <div class="text-end">
                <SfButton CssClass="e-primary" @onclick="SaveFallRiskAsync">Kaydet</SfButton>
            </div>
        </Content>
    </DialogTemplates>

</SfDialog>
<!-----------Fallrisk  MODAL END ------------------->
<!-- SYSTEM CHECK MODAL START -->
<SfDialog @bind-Visible="isSystemModalOpen"
          ShowCloseIcon="true"
          Width="100%"
          Height="100%"
          CssClass="e-fixed">
    <DialogPositionData X="0" Y="0"></DialogPositionData>
    <div class="container">
        <DialogTemplates>
            <Header>
                <SfCard CssClass="dialog-header-card e-shadow">
                    <CardContent>
                        <div class="d-flex justify-content-between align-items-center">
                            <!-- Sol Taraf: Sistem Sorgulama Başlığı -->
                            <strong>Sistem Sorgulama</strong>

                            <!-- Sağ Taraf: Hasta Bilgileri -->
                            <div class="patient-info">
                                Hasta Adı: Ahmet Yılmaz | Yaş: 35 | Cinsiyet: Erkek
                            </div>
                        </div>
                    </CardContent>
                </SfCard>
            </Header>
        </DialogTemplates>
        <div class="row">
            <!-- Sol Taraf -->
            <div class="col-6">
                <!-- Genel Sistem Sorgusu -->
                <SfCard CssClass="mb-3">
                    <Syncfusion.Blazor.Cards.CardHeader>
                        <div class="position-relative required-label">
                            <strong>Genel Sistem Sorgusu</strong>
                        </div>
                    </Syncfusion.Blazor.Cards.CardHeader>
                    <CardContent>
                        <div class="btn-group" role="group">

                            <!-- Normal Butonu -->
                            <SfButton CssClass="@GetSystemCheckButtonClass(systemCheckDto.GeneralSystemCheck, true)"
                                      @onclick="() => ToggleState(() => systemCheckDto.GeneralSystemCheck, value => systemCheckDto.GeneralSystemCheck = value, true)">
                                Normal
                            </SfButton>

                            <!-- Normal Değil Butonu -->
                            <SfButton CssClass="@GetSystemCheckButtonClass(systemCheckDto.GeneralSystemCheck, false)"
                                      @onclick="() => ToggleState(() => systemCheckDto.GeneralSystemCheck, value => systemCheckDto.GeneralSystemCheck = value, false)">
                                Normal değil
                            </SfButton>
                        </div>

                    </CardContent>
                </SfCard>

                <!-- Genitoüriner Sistem -->
                <SfCard CssClass="mb-3">
                    <Syncfusion.Blazor.Cards.CardHeader>
                        <strong>Genitoüriner Sistem</strong>
                    </Syncfusion.Blazor.Cards.CardHeader>
                    <CardContent>
                        <div class="btn-group" role="group">


                            <SfButton CssClass="@GetSystemCheckButtonClass(systemCheckDto.GenitoUrinary, true)"
                                      @onclick="() => ToggleState(() => systemCheckDto.GenitoUrinary, value => systemCheckDto.GenitoUrinary = value, true)">
                                Normal
                            </SfButton>

                            <!-- Normal Değil Butonu -->
                            <SfButton CssClass="@GetSystemCheckButtonClass(systemCheckDto.GenitoUrinary, false)"
                                      @onclick="() => ToggleState(() => systemCheckDto.GenitoUrinary, value => systemCheckDto.GenitoUrinary = value, false)">
                                Normal değil
                            </SfButton>
                        </div>
                    </CardContent>
                </SfCard>

                <!-- Deri -->
                <SfCard CssClass="mb-3">
                    <Syncfusion.Blazor.Cards.CardHeader>
                        <strong>Deri</strong>
                    </Syncfusion.Blazor.Cards.CardHeader>
                    <CardContent>
                        <div class="btn-group" role="group">


                            <SfButton CssClass="@GetSystemCheckButtonClass(systemCheckDto.Skin, true)"
                                      @onclick="() => ToggleState(() => systemCheckDto.Skin, value => systemCheckDto.Skin = value, true)">
                                Normal
                            </SfButton>

                            <!-- Normal Değil Butonu -->
                            <SfButton CssClass="@GetSystemCheckButtonClass(systemCheckDto.Skin, false)"
                                      @onclick="() => ToggleState(() => systemCheckDto.Skin, value => systemCheckDto.Skin = value, false)">
                                Normal değil
                            </SfButton>
                        </div>
                    </CardContent>
                </SfCard>

                <!-- Solunum Sistemi -->
                <SfCard CssClass="mb-3">
                    <Syncfusion.Blazor.Cards.CardHeader>
                        <strong>Solunum Sistemi</strong>
                    </Syncfusion.Blazor.Cards.CardHeader>
                    <CardContent>
                        <div class="btn-group" role="group">

                            <SfButton CssClass="@GetSystemCheckButtonClass(systemCheckDto.Respiratory, true)"
                                      @onclick="() => ToggleState(() => systemCheckDto.Respiratory, value => systemCheckDto.Respiratory = value, true)">
                                Normal
                            </SfButton>

                            <!-- Normal Değil Butonu -->
                            <SfButton CssClass="@GetSystemCheckButtonClass(systemCheckDto.Respiratory, false)"
                                      @onclick="() => ToggleState(() => systemCheckDto.Respiratory, value => systemCheckDto.Respiratory = value, false)">
                                Normal değil
                            </SfButton>
                        </div>
                    </CardContent>
                </SfCard>
            </div>

            <!-- Sağ Taraf -->
            <div class="col-6">
                <!-- Sinir Sistemi -->
                <SfCard CssClass="mb-3">
                    <Syncfusion.Blazor.Cards.CardHeader>
                        <strong>Sinir Sistemi</strong>
                    </Syncfusion.Blazor.Cards.CardHeader>
                    <CardContent>
                        <div class="btn-group" role="group">

                            <SfButton CssClass="@GetSystemCheckButtonClass(systemCheckDto.Nervous, true)"
                                      @onclick="() => ToggleState(() => systemCheckDto.Nervous, value => systemCheckDto.Nervous = value, true)">
                                Normal
                            </SfButton>

                            <!-- Normal Değil Butonu -->
                            <SfButton CssClass="@GetSystemCheckButtonClass(systemCheckDto.Nervous, false)"
                                      @onclick="() => ToggleState(() => systemCheckDto.Nervous, value => systemCheckDto.Nervous = value, false)">
                                Normal değil
                            </SfButton>
                        </div>
                    </CardContent>
                </SfCard>

                <!-- Kas - İskelet Sistemi -->
                <SfCard CssClass="mb-3">
                    <Syncfusion.Blazor.Cards.CardHeader>
                        <strong>Kas - İskelet Sistemi</strong>
                    </Syncfusion.Blazor.Cards.CardHeader>
                    <CardContent>
                        <div class="btn-group" role="group">

                            <SfButton CssClass="@GetSystemCheckButtonClass(systemCheckDto.MusculoSkeletal, true)"
                                      @onclick="() => ToggleState(() => systemCheckDto.MusculoSkeletal, value => systemCheckDto.MusculoSkeletal = value, true)">
                                Normal
                            </SfButton>

                            <!-- Normal Değil Butonu -->
                            <SfButton CssClass="@GetSystemCheckButtonClass(systemCheckDto.MusculoSkeletal, false)"
                                      @onclick="() => ToggleState(() => systemCheckDto.MusculoSkeletal, value => systemCheckDto.MusculoSkeletal = value, false)">
                                Normal değil
                            </SfButton>
                        </div>
                    </CardContent>
                </SfCard>

                <!-- Dolaşım Sistemi -->
                <SfCard CssClass="mb-3">
                    <Syncfusion.Blazor.Cards.CardHeader>
                        <strong>Dolaşım Sistemi</strong>
                    </Syncfusion.Blazor.Cards.CardHeader>
                    <CardContent>
                        <div class="btn-group" role="group">


                            <SfButton CssClass="@GetSystemCheckButtonClass(systemCheckDto.Circulatory, true)"
                                      @onclick="() => ToggleState(() => systemCheckDto.Circulatory, value => systemCheckDto.Circulatory = value, true)">
                                Normal
                            </SfButton>

                            <!-- Normal Değil Butonu -->
                            <SfButton CssClass="@GetSystemCheckButtonClass(systemCheckDto.Circulatory, false)"
                                      @onclick="() => ToggleState(() => systemCheckDto.Circulatory, value => systemCheckDto.Circulatory = value, false)">
                                Normal değil
                            </SfButton>
                        </div>
                    </CardContent>
                </SfCard>

                <!-- Gastrointestinal Sistem -->
                <SfCard CssClass="mb-3">
                    <Syncfusion.Blazor.Cards.CardHeader>
                        <strong>Gastrointestinal Sistem</strong>
                    </Syncfusion.Blazor.Cards.CardHeader>
                    <CardContent>
                        <div class="btn-group" role="group">

                            <SfButton CssClass="@GetSystemCheckButtonClass(systemCheckDto.GastroIntestinal, true)"
                                      @onclick="() => ToggleState(() => systemCheckDto.GastroIntestinal, value => systemCheckDto.GastroIntestinal = value, true)">
                                Normal
                            </SfButton>

                            <!-- Normal Değil Butonu -->
                            <SfButton CssClass="@GetSystemCheckButtonClass(systemCheckDto.GastroIntestinal, false)"
                                      @onclick="() => ToggleState(() => systemCheckDto.GastroIntestinal, value => systemCheckDto.GastroIntestinal = value, false)">
                                Normal değil
                            </SfButton>
                        </div>
                    </CardContent>
                </SfCard>
            </div>
        </div>
    </div>

    <!-- Footer -->
    <DialogTemplates>
        <FooterTemplate>
            <div class="d-flex justify-content-end">
                <SfButton CssClass="e-success" @onclick="OnSaveSystemCheck">Kaydet</SfButton>
            </div>
        </FooterTemplate>
    </DialogTemplates>
</SfDialog>
<!-- SYSTEM CHECK MODAL END -->
<!--KONTROL NOTE SHOW Modal START-->
<SfDialog @ref="NoteDialog" IsModal="true" ShowCloseIcon="true" Width="400px" Header="Kontrol Notu" Visible="false">
    <DialogTemplates>
        <Content>
            <p>@SelectedNote</p>
        </Content>
        <FooterTemplate>
            <SfButton CssClass="e-small e-secondary" Content="Kapat" OnClick="CloseNoteModal"></SfButton>
        </FooterTemplate>
    </DialogTemplates>
</SfDialog>
<!--KONTROL NOTE SHOW Modal END-->

<!--control note DELETE Modal START -->

<SfDialog @ref="DeleteControlNoteDialog" IsModal="true" ShowCloseIcon="true" Width="300px" Header="Silme İşlemi" Visible="false">
    <DialogTemplates>
        <Content>
            <p>Silmek istediğinizden emin misiniz?</p>
        </Content>
        <FooterTemplate>
            <SfButton CssClass="e-small e-danger" OnClick="ConfirmControlNoteDelete">Evet</SfButton>
            <SfButton CssClass="e-small e-primary" OnClick="CloseControlNoteDeleteModal">Hayır</SfButton>
        </FooterTemplate>
    </DialogTemplates>
</SfDialog>

<!--control note DELETE Modal END -->
<!--PATIENT HISTORY DETAILS  Modal START -->
<!-- Detaylar Modal     BARAN1 -->
<SfDialog @bind-Visible="isDetailsModalOpen"
          ShowCloseIcon="true"
          Width="100%"
          Height="100%"
          CssClass="e-fixed">
    <DialogPositionData X="0" Y="0"></DialogPositionData>
    <DialogTemplates>
        <Header>
            <strong>Detaylar</strong>
        </Header>
    </DialogTemplates>
    <div>
        <table class="table">
            <tbody>
                <!-- İlaç -->
                <tr>
                    <td class="label-cell"><strong>İlaç:</strong></td>
                    <td>
                        <SfTextArea Placeholder="Kullanılan ilaçları giriniz..." @bind-Value="patientHistoryDto.Medicine" CssClass="e-outline" RowCount="2" Width="100"></SfTextArea>
                    </td>
                </tr>
                <!-- Aşı -->
                <tr>
                    <td class="label-cell"><strong>Aşı:</strong></td>
                    <td>
                        <SfTextArea Placeholder="Aşı geçmişinizi giriniz..."  @bind-Value="patientHistoryDto.Vaccination" CssClass="e-outline" RowCount="2" Width="100"></SfTextArea>
                    </td>
                </tr>
                <!-- Özel Durum -->
                <tr>
                    <td class="label-cell"><strong>Özel Durum:</strong></td>
                    <td>
                        <SfTextArea Placeholder="Özel durumlarınızı giriniz..." @bind-Value="patientHistoryDto.SpecialCondition" CssClass="e-outline" RowCount="2" Width="100"></SfTextArea>
                    </td>
                </tr>
                <!-- Cihaz -->
                <tr>
                    <td class="label-cell"><strong>Cihaz:</strong></td>
                    <td>
                        <SfTextArea Placeholder="Kullanılan cihazları giriniz..." @bind-Value="patientHistoryDto.Device" CssClass="e-outline" RowCount="2" Width="100"></SfTextArea>
                    </td>
                </tr>
                <!-- Terapi -->
                <tr>
                    <td class="label-cell"><strong>Terapi:</strong></td>
                    <td>
                        <SfTextArea Placeholder="Terapi geçmişinizi giriniz..." @bind-Value="patientHistoryDto.Therapy" CssClass="e-outline" RowCount="2" Width="100"></SfTextArea>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <DialogTemplates>
        <FooterTemplate>
            <div class="d-flex justify-content-end">
                <SfButton CssClass="e-primary" @onclick="CloseDetailsModal">Kapat</SfButton>
            </div>
        </FooterTemplate>
    </DialogTemplates>
</SfDialog>
<!--PATIENT HISTORY DETAILS  Modal END -->


<style>

    .required-label {
    position: relative; /* Kırmızı noktanın konumlandırılması için referans */
}

.required-label::before {
    content: ""; /* Boş içerik */
    position: absolute;
    top: -5px; /* Noktayı yazının üstüne taşır */
    left: -10px; /* Noktayı yazının soluna taşır */
    width: 8px; /* Noktanın genişliği */
    height: 8px; /* Noktanın yüksekliği */
    background-color: red; /* Kırmızı renk */
    border-radius: 50%; /* Yuvarlak bir nokta */
    z-index: 1; /* Görünürlük için üstte tut */
}

   .required-field {
    position: relative;
}

.required-field::before {
    content: ""; /* Boş içerik */
    position: absolute;
    top: -5px; /* Üstte biraz boşluk bırakır */
    left: -5px; /* Solda biraz boşluk bırakır */
    width: 8px; /* Noktanın genişliği */
    height: 8px; /* Noktanın yüksekliği */
    background-color: red; /* Kırmızı renk */
    border-radius: 50%; /* Yuvarlak bir nokta */
    z-index: 1; /* Görsel olarak üstte görünmesi için */
}

  /* Dialog Header - Kırmızı arka plan */
.custom-dialog .e-dlg-header {
    background-color: #ff4d4d; /* Kırmızı */
    color: white; /* Yazı rengi */
    font-weight: bold;
}

/* Dialog Footer */
.custom-footer {
    display: flex;
    justify-content: flex-end; /* Sağ tarafa yerleştirir */
    padding: 10px;
}

/* Kapat Butonu */
.custom-close-button {
    background-color: #ff4d4d; /* Kırmızı arka plan */
    color: white; /* Yazı rengi */
    border: none; /* Kenarlık yok */
    padding: 8px 12px;
    border-radius: 5px;
    cursor: pointer;
}


    .label-cell {
        width: 150px; /* Sabit genişlik */
        text-align: left; /* Sol hizalama */
        vertical-align: top; /* TextArea ile düzgün hizalama */
        padding-right: 10px; /* Yazı ile TextArea arasına boşluk */
    }
    .border-start-rounded {
        border-radius: 8px 0 0 8px;
        margin-right: -1px; /* Yapıştırma için */
    }

    /* Sağdaki butonun sağ kenarında border-radius */
    .border-end-rounded {
        border-radius: 0 8px 8px 0;
        margin-left: -1px; /* Yapıştırma için */
    }

    /* Ortadaki butonun köşelerini düz bırak */
    .border-none {
        border-radius: 0;
        margin-left: -1px; /* Yapıştırma için */
        margin-right: -1px;
    }

    .followUp-textbox {
        height: 50px;
        padding: 10px;
        font-size: 1rem; /* Yazı boyutunu büyütmek istersen */
    }

    /* Grup içindeki tüm butonlar düz köşeler */
    .btn-group .e-primary,
    .btn-group .e-outline {
        border-radius: 0;
        margin: 0;
    }

    /* Sol buton için sol köşeleri yuvarlat */
    .btn-group .btn-left.e-btn {
        border-top-left-radius: 5px;
        border-bottom-left-radius: 5px;
    }

    /* Sağ buton için sağ köşeleri yuvarlat */
    .btn-group .btn-right.e-btn {
        border-top-right-radius: 5px;
        border-bottom-right-radius: 5px;
    }

    .e-fixed {
        position: fixed;
        top: 0;
        left: 0;
        height: 100vh;
        width: 100vw;
        z-index: 1000;
        overflow: hidden;
    }

    .physical-examination .form-label {
        font-size: 0.7rem; /* Label boyutunu daha da küçült */
        font-weight: 600; /* Daha belirgin görünüm */
        margin-bottom: 0.1rem; /* Label ile input arasındaki boşluk azaltıldı */
        text-align: center; /* Label'ı ortala */
    }

    .physical-examination .custom-input {
        height: 2.2rem; /* Yükseklik */
        width: 100%; /* Kolona tam oturması için */
        text-align: center; /* Sayıyı ortalamak için */
        padding: 0; /* Padding sıfırlanıyor */
        line-height: 2.2rem; /* Yüksekliği ortalamak için */
    }

    .physical-examination .row {
        display: flex; /* Flex düzeni ile yan yana yerleşim */
        flex-wrap: nowrap; /* Alt alta geçmeyi engelle */
        gap: 8px; /* Inputlar arasında boşluk bırak */
    }

    .physical-examination .col {
        flex: 1; /* Kolon genişliklerini eşitler */
        min-width: 60px; /* Minimum genişlik azaltıldı */
        padding: 0 4px; /* Kolonlar arasında boşluk azaltıldı */
    }

    .patient-card-container {
        display: flex;
        justify-content: center;
        align-items: center;
        margin-bottom: 20px;
    }

    .main-content {
        display: flex;
        justify-content: space-between;
        gap: 20px;
    }

    .left-column,
    .right-column {
        width: 48%;
    }

    .card-container {
        margin-bottom: 20px;
        padding: 10px;
    }

</style>
