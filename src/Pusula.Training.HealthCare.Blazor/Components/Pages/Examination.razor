@page "/examination/{protocolId:guid}/{patientId:guid}"
@using Pusula.Training.HealthCare.Patients
@using Pusula.Training.HealthCare.Anamneses
@using Pusula.Training.HealthCare.FallRisks
@using Pusula.Training.HealthCare.PshychologicalStates
@using Pusula.Training.HealthCare.PhysicalExaminations
@using Pusula.Training.HealthCare.PainDetails
@using Pusula.Training.HealthCare.Diagnoses
@using Pusula.Training.HealthCare.ExaminationDiagnoses
@using Pusula.Training.HealthCare.Protocols
@using Pusula.Training.HealthCare.SystemChecks
@using Pusula.Training.HealthCare.FollowUpPlans



@using Volo.Abp.Localization
@using Pusula.Training.HealthCare.Localization

@using Syncfusion.Blazor.Cards
@using Syncfusion.Blazor.DataForm
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Calendars
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.Notifications
@using Syncfusion.Blazor.Grids
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<HealthCareResource> Localizer
@inject IPatientsAppService PatientsAppService
@inject IAnamnesisAppService AnamnesisAppService
@inject IFallRisksAppService FallRiskAppService
@inject IPhysicalExaminationsAppService PhysicalExaminationAppService
@inject IPainDetailsAppService PainDetailAppService
@inject IDiagnosisAppService DiagnosisAppService
@inject IExaminationDiagnosisAppService ExaminationDiagnosisAppService
@inject IProtocolsAppService ProtocolAppService
@inject ISystemChecksAppService SystemCheckAppService
@inject IFollowUpPlansAppService FollowUpPlanAppService



<p>Protocol ID: @ProtocolId Patient ID: @PatientId</p>

@*Toast*@
<SfToast @ref="ToastObj" Width="300px">
    <ToastPosition X="Right" Y="Top"></ToastPosition>
</SfToast>


<div class="patient-card-container">
    <SfCard CssClass="e-card e-card-horizontal patient-card">
        <div class="e-card-header">
            <div class="e-card-header-image">
                <!-- Placeholder bir görsel -->
                @* <img src="https://via.placeholder.com/50" alt="Patient" /> *@
                @* <img src="/icons/6833591.png" alt="Patient Avatar" /> *@
                <img src="/images/main/avatar.jpg" class="custom-avatar" alt="Patient Avatar" />
            </div>
            <div class="e-card-header-text">
                <!-- Hasta Adı ve Soyadı -->
                <h4>@($"{protocolDto.PatientFirstName} {protocolDto.PatientLastName}")</h4>
                <!-- Hasta Yaşı ve Doğum Tarihi -->
                <p>
                    <strong>Yaş:</strong> @CalculateAge(protocolDto.PatientBirthDate) |
                    <strong>Doğum Tarihi:</strong> @protocolDto.PatientBirthDate.ToString("dd.MM.yyyy")
                </p>
            </div>
        </div>
        <div class="e-card-content">
            <!-- Hasta No ve Ülke Bilgisi -->
            <p><strong>Hasta No:</strong> @protocolDto.PatientNo | <strong>Ülke:</strong> TR</p>
            <!-- Bölüm ve Doktor Bilgisi -->
            <p><strong>Bölüm:</strong>@protocolDto.DepartmentName</p>
            <p><strong>Doktor:</strong>@($"{protocolDto.DoctorTitleName} {protocolDto.DoctorName} {protocolDto.DoctorSurname}")</p>
        </div>
    </SfCard>
</div>

<!-- #endregion -->


<div class="container-fluid">
    <div class="row">
        <!-- Sol Kolon -->
        <div class="col-md-6">
            <!-- ANAMNESIS START -->
            <div class="mb-3">
                <SfCard CssClass="e-shadow">
                    <Syncfusion.Blazor.Cards.CardHeader>
                        <strong>Yakınması</strong>
                    </Syncfusion.Blazor.Cards.CardHeader>
                    <CardContent>
                        <div class="mb-3">
                            <SfTextBox @bind-Value="anamnesisCreateDto.Complaint" Placeholder="Şikayeti" CssClass="form-control" />
                        </div>
                        <div class="mb-3">
                            <p class="form-label">Başlangıç Tarihi</p>
                            <div class="d-flex align-items-center">
                                <SfNumericTextBox TValue="int" @bind-Value="durationValue" Placeholder="0" ShowSpinButton="false" />
                                <div class="btn-group me-2" role="group">
                                    <SfButton CssClass="@GetButtonClass("Saat")" @onclick='() => UpdateUnit("Saat")'>Saat</SfButton>
                                    <SfButton CssClass="@GetButtonClass("Gün")" @onclick='() => UpdateUnit("Gün")'>Gün</SfButton>
                                    <SfButton CssClass="@GetButtonClass("Hafta")" @onclick='() => UpdateUnit("Hafta")'>Hafta</SfButton>
                                    <SfButton CssClass="@GetButtonClass("Ay")" @onclick='() => UpdateUnit("Ay")'>Ay</SfButton>
                                    <SfButton CssClass="@GetButtonClass("Yıl")" @onclick='() => UpdateUnit("Yıl")'>Yıl</SfButton>
                                </div>
                                <span class="me-2">Önce</span>
                                <SfDatePicker TValue="DateTime" @bind-Value="selectedDate" Placeholder="Tarih Seç" />
                            </div>
                        </div>
                        <div class="mb-3">
                            <SfTextBox @bind-Value="anamnesisCreateDto.Story" Placeholder="Öykü" CssClass="form-control" />
                        </div>
                    </CardContent>
                </SfCard>
            </div>
            <!-- ANAMNESIS END -->
            <!-- Özgeçmiş Kartı START -->
            <div class="mb-3">
                <SfCard CssClass="e-shadow">
                    <Syncfusion.Blazor.Cards.CardHeader>
                        <strong style="text-align: left; display: block;">Özgeçmiş</strong>
                    </Syncfusion.Blazor.Cards.CardHeader>
                    <CardContent>
                        <!-- İçerik ileride eklenecek -->
                    </CardContent>
                </SfCard>
            </div>
            <!-- Özgeçmiş Kartı END -->
            <!-- Sistem Sorgusu Kartı START -->
            <div class="mb-3">
                <SfCard CssClass="e-shadow">
                    <Syncfusion.Blazor.Cards.CardHeader>
                        <div class="d-flex justify-content-between align-items-center" style="width: 100%;">
                            <strong>Sistem Sorgusu</strong>
                            <span @onclick="OpenSystemCheckModal" style="cursor: pointer; color: #007bff; font-size: 0.9rem; text-decoration: none;">
                                Sistem Sorgulama
                            </span>
                        </div>
                    </Syncfusion.Blazor.Cards.CardHeader>

                    <CardContent>
                        <div class="mb-3">
                            <SfTextArea @bind-Value="systemCheckDto.Description" Placeholder="Açıklama" CssClass="form-control" />
                        </div>
                    </CardContent>
                </SfCard>
            </div>
            <!-- Sistem Sorgusu Kartı END -->
            <!-- Psychological State START -->
            <div class="mb-3">
                <SfCard CssClass="e-shadow">
                    <Syncfusion.Blazor.Cards.CardHeader>
                        <strong>Psikolojik Durum</strong>
                    </Syncfusion.Blazor.Cards.CardHeader>
                    <CardContent>
                        <div class="d-flex align-items-center mb-3">
                            <div class="btn-group me-3" role="group">
                                @foreach (var state in Enum.GetValues(typeof(MentalState)))
                                {
                                    @* buradayim *@
                                    <SfButton CssClass="@GetButtonClass((MentalState)state)"
                                              @onclick="() => SetMentalState((MentalState)state)">
                                        @Localizer[$"Enum:MentalState.{state}"]
                                    </SfButton>
                                }
                            </div>
                            <SfTextBox @bind-Value="description" Placeholder="Açıklama" CssClass="form-control" Style="width: 100px;" />
                        </div>
                    </CardContent>
                </SfCard>
            </div>
            <!-- Psychological State END -->
            <!-- Fallrisk START -->
            <div class="mb-3">
                <SfCard CssClass="e-shadow" Style="padding: 10px;">
                    <CardContent>
                        <div class="d-flex align-items-center justify-content-between">
                            <strong style="margin-right: auto;">Düşme Riski</strong>
                            @if (isFallRisk)
                            {
                                <div class="d-flex align-items-center me-3">
                                    <SfTextBox @bind-Value="fallRiskDto.Description" Placeholder="Açıklama" CssClass="me-2" OnBlur="@UpdateDescriptionAndScoreAsync" />

                                    <strong class="me-2">Skor</strong>
                                    <SfNumericTextBox TValue="int" @bind-Value="fallRiskDto.Score" Placeholder="Skor" ShowSpinButton="false" CssClass="me-2" OnBlur="@UpdateDescriptionAndScoreAsync" />
                                </div>
                            }
                            <div class="btn-group" role="group">
                                <SfButton CssClass="@(isFallRisk ? "e-primary" : "e-outline")" @onclick="() => SetFallRisk(true)">Var</SfButton>
                                <SfButton CssClass="@(isFallRisk ? "e-outline" : "e-primary")" @onclick="() => SetFallRisk(false)">Yok</SfButton>
                            </div>
                        </div>
                    </CardContent>
                </SfCard>
            </div>
            <!-- Fallrisk END -->
            <!-- Ağrı Kartı START -->
            <div class="mb-3">
                <SfCard CssClass="e-shadow">
                    <CardContent>
                        <!-- İlk Satır: Ağrı, Bölge TextBox, Skor NumericTextBox ve Var/Yok Butonları -->
                        <div class="d-flex align-items-center">
                            <strong style="margin-right: 10px;">Ağrı</strong>
                            @if (isPain)
                            {
                                <!-- Bölge TextBox -->
                                <SfTextBox @bind-Value="painDetailDto.Area" Placeholder="Bölge" CssClass="me-2" />

                                <strong style="margin-right: 10px;">Skor</strong>

                                <!-- Skor NumericTextBox -->
                                <SfNumericTextBox @bind-Value="painDetailDto.Score" TValue="int" Placeholder="Skor" ShowSpinButton="false" CssClass="me-2" />

                                <!-- Açıklama TextBox -->
                                <SfTextBox @bind-Value="painDetailDto.Description" Placeholder="Açıklama" CssClass="me-2" />
                            }

                            <!-- "Var" ve "Yok" Butonları -->
                            <div class="btn-group ms-3" role="group">
                                <SfButton CssClass="@(isPain ? "e-primary" : "e-outline")" @onclick="() => SetPain(true)">Var</SfButton>
                                <SfButton CssClass="@(isPain ? "e-outline" : "e-primary")" @onclick="() => SetPain(false)">Yok</SfButton>
                            </div>
                        </div>

                        <!-- İkinci Satır: Ağrı Türü Butonları -->
                        @if (isPain)
                        {
                            <!-- Ağrı Niteliği Label ve Butonlar -->
                            <div class="d-flex align-items-center flex-wrap mt-3">
                                <label class="form-label me-2">Ağrı Niteliği</label>
                                <div class="btn-group d-flex flex-wrap" role="group">
                                    @foreach (var painType in painTypes)
                                    {
                                        <SfButton CssClass="@GetPainTypeButtonClass(painType.Id)" @onclick="() => SetPainType(painType.Id)">
                                            @* @bind-Value="painDetailDto.PainTypeId" *@
                                            @painType.DisplayName
                                        </SfButton>
                                    }
                                </div>
                            </div>
                        }

                        <!-- Üçüncü Satır: Diğer Bölge için TextBox -->
                        @if (isPain)
                        {
                            <div class="mb-3">
                                <SfTextBox @bind-Value="painDetailDto.OtherPain" Placeholder="Diğer" CssClass="form-control" />
                            </div>
                        }

                        <!-- Dördüncü Satır: Ağrı Ritmi, Ağrı Başlangıcı ve Süre Alanları -->
                        @if (isPain)
                        {
                            <!-- Ağrı Ritmi -->
                            <div class="d-flex align-items-center mt-3">
                                <label class="form-label me-2">Ağrı Ritmi</label>

                                <div class="btn-group" role="group">
                                    @foreach (var rhythm in Enum.GetValues(typeof(PainRhythm)))
                                    {
                                        <SfButton CssClass="@GetPainRhythmButtonClass((PainRhythm)rhythm)"
                                                  @onclick="() => SetPainRhythm((PainRhythm)rhythm)">
                                            @Localizer[$"Enum:PainRhythm.{rhythm}"]
                                        </SfButton>
                                    }
                                </div>
                            </div>

                            <!-- Ağrı Başlangıcı -->
                            <div class="d-flex align-items-center mt-3">
                                <label class="form-label me-2">Ağrı Başlangıcı</label>

                                <!-- Süre NumericTextBox -->
                                <SfNumericTextBox TValue="int" @bind-Value="painDurationValue" Placeholder="Süre" ShowSpinButton="false" CssClass="me-2" @onchange="UpdatePainStartDate" />

                                <!-- Zaman Seçim Dropdown -->
                                <SfDropDownList TValue="string" TItem="string" @bind-Value="painSelectedUnit" DataSource="@timeUnits" Placeholder="Seç" CssClass="me-2" />

                                <!-- Önce Yazısı -->
                                <span class="ms-2">Önce</span>
                            </div>

                            <!-- DateTime Picker (güncellenmiş tarih) -->
                            <div class="d-flex align-items-center mt-3">
                                <SfDatePicker TValue="DateTime" @bind-Value="painStartDate" Placeholder="Tarih Seç" CssClass="me-2" />
                            </div>

                            <!-- Kaydet Butonu -->
                            <div class="d-flex justify-content-end mt-4">
                                <SfButton CssClass="e-primary" @onclick="SavePainDetailAsync">Kaydet</SfButton>
                            </div>
                        }
                    </CardContent>
                </SfCard>
            </div>
            <!-- Ağrı Kartı END -->
        </div>

        <!-- Sağ Kolon -->
        <div class="col-md-6">
            <!-- FIZIKSEL MUAYENE START -->
            <div class="mb-3">
                <SfCard CssClass="e-shadow physical-examination">
                    <div class="d-flex align-items-center justify-content-start" style="padding: 10px;">
                        <strong>Fizik Muayene Bulguları</strong>
                    </div>
                    <CardContent>
                        <!-- Ölçüm Alanları -->
                        <div class="row align-items-center mb-3 text-center">
                            <!-- Ağırlık -->
                            <div class="col">
                                <label for="weight" class="form-label">Ağırlık (kg)</label>
                                <SfNumericTextBox TValue="decimal?" @bind-Value="physicalExaminationDto.Weight" CssClass="form-control custom-input" Id="weight" ShowSpinButton="false" />
                            </div>

                            <!-- Boy -->
                            <div class="col">
                                <label for="height" class="form-label">Boy (cm)</label>
                                <SfNumericTextBox TValue="decimal?" @bind-Value="physicalExaminationDto.Height" CssClass="form-control custom-input" Id="height" ShowSpinButton="false" />
                            </div>

                            <!-- VKİ -->
                            <div class="col">
                                <label for="bmi" class="form-label">VKİ</label>
                                <SfNumericTextBox TValue="decimal?" @bind-Value="physicalExaminationDto.BMI" CssClass="form-control custom-input" Id="bmi" ShowSpinButton="false" Readonly="true" />
                            </div>

                            <!-- VYA -->
                            <div class="col">
                                <label for="vya" class="form-label">VYA</label>
                                <SfNumericTextBox TValue="decimal?" @bind-Value="physicalExaminationDto.VYA" CssClass="form-control custom-input" Id="vya" ShowSpinButton="false" Readonly="true" />
                            </div>

                            <!-- Ateş -->
                            <div class="col">
                                <label for="temperature" class="form-label">Ateş (°C)</label>
                                <SfNumericTextBox TValue="decimal?" @bind-Value="physicalExaminationDto.Temperature" CssClass="form-control custom-input" Id="temperature" ShowSpinButton="false" />
                            </div>

                            <!-- Nabız -->
                            <div class="col">
                                <label for="pulse" class="form-label">Nabız</label>
                                <SfNumericTextBox TValue="int?" @bind-Value="physicalExaminationDto.Pulse" CssClass="form-control custom-input" Id="pulse" ShowSpinButton="false" />
                            </div>

                            <!-- Sistolik Kan Basıncı -->
                            <div class="col">
                                <label for="systolicBP" class="form-label">KB-S</label>
                                <SfNumericTextBox TValue="int?" @bind-Value="physicalExaminationDto.SystolicBP" CssClass="form-control custom-input" Id="systolicBP" ShowSpinButton="false" />
                            </div>

                            <!-- Diyastolik Kan Basıncı -->
                            <div class="col">
                                <label for="diastolicBP" class="form-label">KB-D</label>
                                <SfNumericTextBox TValue="int?" @bind-Value="physicalExaminationDto.DiastolicBP" CssClass="form-control custom-input" Id="diastolicBP" ShowSpinButton="false" />
                            </div>

                            <!-- SPO2 -->
                            <div class="col">
                                <label for="spo2" class="form-label">SPO2</label>
                                <SfNumericTextBox TValue="int?" @bind-Value="physicalExaminationDto.SPO2" CssClass="form-control custom-input" Id="spo2" ShowSpinButton="false" />
                            </div>
                        </div>

                        <!-- Not -->
                        <div class="mb-3">
                            <SfTextBox @bind-Value="physicalExaminationDto.Note" Placeholder="Not" CssClass="form-control" />
                        </div>

                        @*  <!-- Kaydet Butonu -->
                        <div class="text-end">
                        <SfButton CssClass="e-primary" @onclick="SavePhysicalExaminationAsync">Kaydet</SfButton>
                        </div> *@

                        <!-- Güncelleme Butonu -->
                        <SfButton CssClass="e-primary" @onclick="SavePhysicalExaminationAsync">
                            @if (isExistingPhysicalExamination)
                            {
                                <span>Güncelle</span>
                            }
                            else
                            {
                                <span>Kaydet</span>
                            }
                        </SfButton>
                    </CardContent>
                </SfCard>
            </div>
            <!-- FIZIKSEL MUAYENE END -->
            <!-- Tanılar (ICD-10) Kartı START -->
            <div class="mb-3">
                <SfCard CssClass="e-shadow">
                    <Syncfusion.Blazor.Cards.CardHeader>
                        <div style="display: flex; justify-content: flex-start; padding: 10px;">
                            <strong>Tanılar (ICD-10)</strong>
                        </div>
                    </Syncfusion.Blazor.Cards.CardHeader>
                    <CardContent>
                        <div class="d-flex align-items-center justify-content-between">
                            <!-- Dropdown -->
                            <SfDropDownList TValue="Guid"
                                            Placeholder="Tanı seçiniz"
                                            TItem="Pusula.Training.HealthCare.Shared.LookupDto<Guid>"
                                            Width="300px"
                                            @bind-Value="@SelectedDiagnosisId"
                                            DataSource="@IcdList">
                                <DropDownListFieldSettings Value="Id" Text="DisplayName"></DropDownListFieldSettings>
                            </SfDropDownList>

                            <!-- Butonlar -->
                            <div class="btn-group ms-3" role="group">
                                @*   @foreach (var type in Enum.GetValues(typeof(DiagnosisType)))
                                {
                                <SfButton CssClass="@GetDiagnosisTypeButtonClass((DiagnosisType)type)"
                                @onclick="() => SetDiagnosisType((DiagnosisType)type)">
                                @type
                                </SfButton>
                                } *@

                                <div class="btn-group ms-3" role="group">
                                    <SfButton CssClass="@GetDiagnosisTypeButtonClass(DiagnosisType.Definitive)"
                                              @onclick="() => SetDiagnosisType(DiagnosisType.Definitive)">
                                        @Localizer["DiagnosisType:Definitive"]
                                    </SfButton>

                                    <SfButton CssClass="@GetDiagnosisTypeButtonClass(DiagnosisType.Preliminary)"
                                              @onclick="() => SetDiagnosisType(DiagnosisType.Preliminary)">
                                        @Localizer["DiagnosisType:Preliminary"]
                                    </SfButton>

                                    <SfButton CssClass="@GetDiagnosisTypeButtonClass(DiagnosisType.Differential)"
                                              @onclick="() => SetDiagnosisType(DiagnosisType.Differential)">
                                        @Localizer["DiagnosisType:Differential"]
                                    </SfButton>
                                </div>

                            </div>
                        </div>

                        <!-- İkinci Satır: DatePicker ve TextBox -->
                        <div class="d-flex align-items-center justify-content-between mt-3">
                            <!-- DatePicker -->
                            <SfDatePicker TValue="DateTime" Placeholder="İlk Tanı Tarihi"
                                          CssClass="form-control"
                                          @bind-Value="DiagnosisDate" />

                            <!-- TextBox -->
                            <SfTextBox Placeholder="Açıklama"
                                       CssClass="form-control ms-3" Style="width: 300px;"
                                       @bind-Value="Description" />
                        </div>

                        <!-- Ekle Butonu -->
                        <div class="d-flex justify-content-end mt-3">
                            <SfButton CssClass="btn-primary" @onclick="CreateExaminationDiagnosis">
                                Ekle
                            </SfButton>
                        </div>

                        @if (ExaminationDiagnoses.Any())
                        {
                            <SfGrid DataSource="@ExaminationDiagnoses" AllowPaging="false" AllowSorting="true">
                                <GridColumns>
                                    <GridColumn Field="Diagnosis.Code" HeaderText="Kodu" Width="90"></GridColumn>
                                    <GridColumn Field="Diagnosis.Name" HeaderText="Adı" Width="90"></GridColumn>
                                    <GridColumn Field="ExaminationDiagnosis.InitialDate" HeaderText="İlk Tanı Tarihi" Width="100" Format="dd.MM.yyyy"></GridColumn>
                                    <GridColumn Field="ExaminationDiagnosis.DiagnosisType" HeaderText="Tanı Tipi" Width="100"></GridColumn>
                                    <GridColumn Field="ExaminationDiagnosis.Note" HeaderText="Açıklama" Width="100"></GridColumn>

                                    <!-- Silme Butonu -->
                                    <GridColumn HeaderText="İşlem" Width="100">
                                        <Template>
                                            @{
                                                var item = (ExaminationDiagnosisWithNavigationPropertiesDto)@context;
                                            }
                                            <SfButton CssClass="btn-danger btn-sm" @onclick="(() => DeleteExaminationDiagnosis(item.ExaminationDiagnosis.Id))">
                                                Sil
                                            </SfButton>
                                        </Template>
                                    </GridColumn>
                                </GridColumns>
                            </SfGrid>
                        }
                        else
                        {
                            <p>Hiç kayıt bulunamadı.</p>
                        }

                    </CardContent>
                </SfCard>
            </div>
            <!-- Tanılar (ICD-10) Kartı END -->
            <!-- İzlem Plan Kartı START -->
            <div class="mb-3">
                <SfCard CssClass="e-shadow">

                    <Syncfusion.Blazor.Cards.CardHeader>
                        <div style="display: flex; justify-content: flex-start; padding: 10px;">
                            <strong>İzlem ve Plan</strong>
                        </div>
                    </Syncfusion.Blazor.Cards.CardHeader>


                    <CardContent>
                        <!-- acıklama Alanı -->
                        <div class="mb-3">
                            <SfTextBox Placeholder="Tedavi notu" CssClass="followUp-textbox" @bind-Value="followUpPlanDto.Note"> </SfTextBox>
                        </div>

                        <div class="btn-group me-3" role="group" style="display: flex; flex-wrap: wrap; gap: 8px;">
                            @foreach (var type in Enum.GetValues(typeof(FollowUpType)))
                            {
                                <SfButton CssClass="@GetButtonClass((FollowUpType)type)"
                                          @onclick="() => SetFollowUpType((FollowUpType)type)"
                                          Style="margin-bottom: 4px; border-radius: 10px;">
                                    @Localizer[$"Enum:FollowUpType.{type}"]
                                </SfButton>
                            }
                        </div>

                        <div class="mb-3">
                            <!-- Başlık ve Buton Grubu Aynı Satırda -->
                            <div class="d-flex align-items-center justify-content-start gap-3">
                                <!-- Başlık -->
                                <strong>Ameliyat Planlanacak mı?</strong>

                                <!-- Buton Grubu -->
                                <div class="btn-group" role="group">
                                    <SfButton CssClass="@($"btn-left {GetSurgeryButtonClass(true)}")"
                                              @onclick="() => SetSurgeryPlan(true)">
                                        Evet
                                    </SfButton>
                                  
                                    <SfButton CssClass="@($"btn-right {GetSurgeryButtonClass(false)}")"
                                              @onclick="() => SetSurgeryPlan(false)">
                                        Hayır
                                    </SfButton>
                                </div>
                            </div>
                        </div>

                        <!-- Kaydet Butonu -->
                        <div class="text-end mt-3">
                            <SfButton CssClass="e-primary" @onclick="SaveFollowUpPlan">
                                Kaydet
                            </SfButton>
                        </div>
                    </CardContent>
                </SfCard>
            </div>
            <!-- İzlem Plan Kartı END -->

        </div>

    </div>
</div>

<!---------------- Fallrisk  MODAL START ----------------->
<SfDialog @bind-Visible="isFallRiskModalOpen" Width="400px" Header="Düşme Riski Detayları" IsModal="true" ShowCloseIcon="true" CloseOnEscape="true">
    <DialogTemplates>
        <Content>
            <div class="mb-3">
                <p class="form-label">Düşme Hikayesi</p>
                <div class="btn-group" role="group">


                    <SfButton CssClass="@(fallRiskDto.HasFallHistory ? "e-primary" : "e-outline")"
                              @onclick="() => SetHasFallHistory(true)">
                        Var
                    </SfButton>
                    <SfButton CssClass="@(fallRiskDto.HasFallHistory == false ? "e-primary" : "e-outline")"
                              @onclick="() => SetHasFallHistory(false)">
                        Yok
                    </SfButton>
                </div>
            </div>

            <!-- Kullanılan İlaçlar -->
            <div class="mb-3">
                <p class="form-label">Kullandığı İlaçlar</p>
                <div class="btn-group" role="group">
                    <SfButton CssClass="@(fallRiskDto.UsesMedications ? "e-primary" : "e-outline")"
                              @onclick="() => SetUsesMedications(true)">
                        Var
                    </SfButton>
                    <SfButton CssClass="@(fallRiskDto.UsesMedications == false ? "e-primary" : "e-outline")"
                              @onclick="() => SetUsesMedications(false)">
                        Yok
                    </SfButton>
                </div>
            </div>

            <!-- Bağımlılık Durumu -->
            <div class="mb-3">
                <p class="form-label">Bağımlılık Durumu</p>
                <div class="btn-group" role="group">
                    <SfButton CssClass="@(fallRiskDto.HasAddiction ? "e-primary" : "e-outline")"
                              @onclick="() => SetHasAddiction(true)">
                        Var
                    </SfButton>
                    <SfButton CssClass="@(fallRiskDto.HasAddiction == false ? "e-primary" : "e-outline")"
                              @onclick="() => SetHasAddiction(false)">
                        Yok
                    </SfButton>
                </div>
            </div>

            <!-- Denge Bozukluğu -->
            <div class="mb-3">
                <p class="form-label">Denge Bozukluğu</p>
                <div class="btn-group" role="group">
                    <SfButton CssClass="@(fallRiskDto.HasBalanceDisorder ? "e-primary" : "e-outline")"
                              @onclick="() => SetHasBalanceDisorder(true)">
                        Var
                    </SfButton>
                    <SfButton CssClass="@(fallRiskDto.HasBalanceDisorder == false ? "e-primary" : "e-outline")"
                              @onclick="() => SetHasBalanceDisorder(false)">
                        Yok
                    </SfButton>
                </div>
            </div>

            <!-- Görme Bozukluğu -->
            <div class="mb-3">
                <p class="form-label">Görme Bozukluğu</p>
                <div class="btn-group" role="group">
                    <SfButton CssClass="@(fallRiskDto.HasVisionImpairment ? "e-primary" : "e-outline")"
                              @onclick="() => SetHasVisionImpairment(true)">
                        Var
                    </SfButton>
                    <SfButton CssClass="@(fallRiskDto.HasVisionImpairment == false ? "e-primary" : "e-outline")"
                              @onclick="() => SetHasVisionImpairment(false)">
                        Yok
                    </SfButton>
                </div>
            </div>

            <!-- Mental Durum -->
            <div class="mb-3">
                <p class="form-label">Mental Durum</p>
                <div class="btn-group" role="group">
                    <SfButton CssClass="@(fallRiskDto.MentalState ? "e-primary" : "e-outline")"
                              @onclick="() => SetMentalState(true)">
                        Oryante
                    </SfButton>
                    <SfButton CssClass="@(fallRiskDto.MentalState == false ? "e-primary" : "e-outline")"
                              @onclick="() => SetMentalState(false)">
                        Oryante Değil
                    </SfButton>
                </div>
            </div>

            <!-- Genel Sağlık Durumu -->
            <div class="mb-3">
                <p class="form-label">Genel Sağlık Durumu</p>
                <div class="btn-group" role="group">
                    <SfButton CssClass="@(fallRiskDto.GeneralHealthState ? "e-primary" : "e-outline")"
                              @onclick="() => SetGeneralHealthState(true)">
                        Normal
                    </SfButton>
                    <SfButton CssClass="@(fallRiskDto.GeneralHealthState == false ? "e-primary" : "e-outline")"
                              @onclick="() => SetGeneralHealthState(false)">
                        Normal Değil
                    </SfButton>
                </div>
            </div>



            <!-- Kaydet Butonu -->
            <div class="text-end">
                <SfButton CssClass="e-primary" @onclick="SaveFallRiskAsync">Kaydet</SfButton>
            </div>
        </Content>
    </DialogTemplates>

</SfDialog>
<!-----------Fallrisk  MODAL END ------------------->

<!-- SYSTEM CHECK MODAL START -->
<SfDialog @bind-Visible="isSystemModalOpen"
          ShowCloseIcon="true"
          Width="100%"
          Height="100%"
          CssClass="e-fixed">
    <DialogPositionData X="0" Y="0"></DialogPositionData>
    <div class="container">
        <DialogTemplates>
            <Header>
                <SfCard CssClass="dialog-header-card e-shadow">
                    <CardContent>
                        <div class="d-flex justify-content-between align-items-center">
                            <!-- Sol Taraf: Sistem Sorgulama Başlığı -->
                            <strong>Sistem Sorgulama</strong>

                            <!-- Sağ Taraf: Hasta Bilgileri -->
                            <div class="patient-info">
                                Hasta Adı: Ahmet Yılmaz | Yaş: 35 | Cinsiyet: Erkek
                            </div>
                        </div>
                    </CardContent>
                </SfCard>
            </Header>
        </DialogTemplates>
        <div class="row">
            <!-- Sol Taraf -->
            <div class="col-6">
                <!-- Genel Sistem Sorgusu -->
                <SfCard CssClass="mb-3">
                    <Syncfusion.Blazor.Cards.CardHeader>
                        <strong>Genel Sistem Sorgusu</strong>
                    </Syncfusion.Blazor.Cards.CardHeader>
                    <CardContent>
                        <div class="btn-group" role="group">

                            <!-- Normal Butonu -->
                            <SfButton CssClass="@GetSystemCheckButtonClass(systemCheckDto.GeneralSystemCheck, true)"
                                      @onclick="() => ToggleState(() => systemCheckDto.GeneralSystemCheck, value => systemCheckDto.GeneralSystemCheck = value, true)">
                                Normal
                            </SfButton>

                            <!-- Normal Değil Butonu -->
                            <SfButton CssClass="@GetSystemCheckButtonClass(systemCheckDto.GeneralSystemCheck, false)"
                                      @onclick="() => ToggleState(() => systemCheckDto.GeneralSystemCheck, value => systemCheckDto.GeneralSystemCheck = value, false)">
                                Normal değil
                            </SfButton>
                        </div>

                    </CardContent>
                </SfCard>

                <!-- Genitoüriner Sistem -->
                <SfCard CssClass="mb-3">
                    <Syncfusion.Blazor.Cards.CardHeader>
                        <strong>Genitoüriner Sistem</strong>
                    </Syncfusion.Blazor.Cards.CardHeader>
                    <CardContent>
                        <div class="btn-group" role="group">


                            <SfButton CssClass="@GetSystemCheckButtonClass(systemCheckDto.GenitoUrinary, true)"
                                      @onclick="() => ToggleState(() => systemCheckDto.GenitoUrinary, value => systemCheckDto.GenitoUrinary = value, true)">
                                Normal
                            </SfButton>

                            <!-- Normal Değil Butonu -->
                            <SfButton CssClass="@GetSystemCheckButtonClass(systemCheckDto.GenitoUrinary, false)"
                                      @onclick="() => ToggleState(() => systemCheckDto.GenitoUrinary, value => systemCheckDto.GenitoUrinary = value, false)">
                                Normal değil
                            </SfButton>
                        </div>
                    </CardContent>
                </SfCard>

                <!-- Deri -->
                <SfCard CssClass="mb-3">
                    <Syncfusion.Blazor.Cards.CardHeader>
                        <strong>Deri</strong>
                    </Syncfusion.Blazor.Cards.CardHeader>
                    <CardContent>
                        <div class="btn-group" role="group">


                            <SfButton CssClass="@GetSystemCheckButtonClass(systemCheckDto.Skin, true)"
                                      @onclick="() => ToggleState(() => systemCheckDto.Skin, value => systemCheckDto.Skin = value, true)">
                                Normal
                            </SfButton>

                            <!-- Normal Değil Butonu -->
                            <SfButton CssClass="@GetSystemCheckButtonClass(systemCheckDto.Skin, false)"
                                      @onclick="() => ToggleState(() => systemCheckDto.Skin, value => systemCheckDto.Skin = value, false)">
                                Normal değil
                            </SfButton>
                        </div>
                    </CardContent>
                </SfCard>

                <!-- Solunum Sistemi -->
                <SfCard CssClass="mb-3">
                    <Syncfusion.Blazor.Cards.CardHeader>
                        <strong>Solunum Sistemi</strong>
                    </Syncfusion.Blazor.Cards.CardHeader>
                    <CardContent>
                        <div class="btn-group" role="group">

                            <SfButton CssClass="@GetSystemCheckButtonClass(systemCheckDto.Respiratory, true)"
                                      @onclick="() => ToggleState(() => systemCheckDto.Respiratory, value => systemCheckDto.Respiratory = value, true)">
                                Normal
                            </SfButton>

                            <!-- Normal Değil Butonu -->
                            <SfButton CssClass="@GetSystemCheckButtonClass(systemCheckDto.Respiratory, false)"
                                      @onclick="() => ToggleState(() => systemCheckDto.Respiratory, value => systemCheckDto.Respiratory = value, false)">
                                Normal değil
                            </SfButton>
                        </div>
                    </CardContent>
                </SfCard>
            </div>

            <!-- Sağ Taraf -->
            <div class="col-6">
                <!-- Sinir Sistemi -->
                <SfCard CssClass="mb-3">
                    <Syncfusion.Blazor.Cards.CardHeader>
                        <strong>Sinir Sistemi</strong>
                    </Syncfusion.Blazor.Cards.CardHeader>
                    <CardContent>
                        <div class="btn-group" role="group">

                            <SfButton CssClass="@GetSystemCheckButtonClass(systemCheckDto.Nervous, true)"
                                      @onclick="() => ToggleState(() => systemCheckDto.Nervous, value => systemCheckDto.Nervous = value, true)">
                                Normal
                            </SfButton>

                            <!-- Normal Değil Butonu -->
                            <SfButton CssClass="@GetSystemCheckButtonClass(systemCheckDto.Nervous, false)"
                                      @onclick="() => ToggleState(() => systemCheckDto.Nervous, value => systemCheckDto.Nervous = value, false)">
                                Normal değil
                            </SfButton>
                        </div>
                    </CardContent>
                </SfCard>

                <!-- Kas - İskelet Sistemi -->
                <SfCard CssClass="mb-3">
                    <Syncfusion.Blazor.Cards.CardHeader>
                        <strong>Kas - İskelet Sistemi</strong>
                    </Syncfusion.Blazor.Cards.CardHeader>
                    <CardContent>
                        <div class="btn-group" role="group">

                            <SfButton CssClass="@GetSystemCheckButtonClass(systemCheckDto.MusculoSkeletal, true)"
                                      @onclick="() => ToggleState(() => systemCheckDto.MusculoSkeletal, value => systemCheckDto.MusculoSkeletal = value, true)">
                                Normal
                            </SfButton>

                            <!-- Normal Değil Butonu -->
                            <SfButton CssClass="@GetSystemCheckButtonClass(systemCheckDto.MusculoSkeletal, false)"
                                      @onclick="() => ToggleState(() => systemCheckDto.MusculoSkeletal, value => systemCheckDto.MusculoSkeletal = value, false)">
                                Normal değil
                            </SfButton>
                        </div>
                    </CardContent>
                </SfCard>

                <!-- Dolaşım Sistemi -->
                <SfCard CssClass="mb-3">
                    <Syncfusion.Blazor.Cards.CardHeader>
                        <strong>Dolaşım Sistemi</strong>
                    </Syncfusion.Blazor.Cards.CardHeader>
                    <CardContent>
                        <div class="btn-group" role="group">


                            <SfButton CssClass="@GetSystemCheckButtonClass(systemCheckDto.Circulatory, true)"
                                      @onclick="() => ToggleState(() => systemCheckDto.Circulatory, value => systemCheckDto.Circulatory = value, true)">
                                Normal
                            </SfButton>

                            <!-- Normal Değil Butonu -->
                            <SfButton CssClass="@GetSystemCheckButtonClass(systemCheckDto.Circulatory, false)"
                                      @onclick="() => ToggleState(() => systemCheckDto.Circulatory, value => systemCheckDto.Circulatory = value, false)">
                                Normal değil
                            </SfButton>
                        </div>
                    </CardContent>
                </SfCard>

                <!-- Gastrointestinal Sistem -->
                <SfCard CssClass="mb-3">
                    <Syncfusion.Blazor.Cards.CardHeader>
                        <strong>Gastrointestinal Sistem</strong>
                    </Syncfusion.Blazor.Cards.CardHeader>
                    <CardContent>
                        <div class="btn-group" role="group">

                            <SfButton CssClass="@GetSystemCheckButtonClass(systemCheckDto.GastroIntestinal, true)"
                                      @onclick="() => ToggleState(() => systemCheckDto.GastroIntestinal, value => systemCheckDto.GastroIntestinal = value, true)">
                                Normal
                            </SfButton>

                            <!-- Normal Değil Butonu -->
                            <SfButton CssClass="@GetSystemCheckButtonClass(systemCheckDto.GastroIntestinal, false)"
                                      @onclick="() => ToggleState(() => systemCheckDto.GastroIntestinal, value => systemCheckDto.GastroIntestinal = value, false)">
                                Normal değil
                            </SfButton>
                        </div>
                    </CardContent>
                </SfCard>
            </div>
        </div>
    </div>

    <!-- Footer -->
    <DialogTemplates>
        <FooterTemplate>
            <div class="d-flex justify-content-end">
                <SfButton CssClass="e-success" @onclick="OnSaveSystemCheck">Kaydet</SfButton>
            </div>
        </FooterTemplate>
    </DialogTemplates>
</SfDialog>
<!-- SYSTEM CHECK MODAL END -->


<style>

    
    .followUp-textbox {
        height: 50px;
        padding: 10px;
        font-size: 1rem; /* Yazı boyutunu büyütmek istersen */
    }

    /* Grup içindeki tüm butonlar düz köşeler */
    .btn-group .e-primary,
    .btn-group .e-outline {
        border-radius: 0;
        margin: 0;
    }

    /* Sol buton için sol köşeleri yuvarlat */
    .btn-group .btn-left.e-btn {
        border-top-left-radius: 5px;
        border-bottom-left-radius: 5px;
    }

    /* Sağ buton için sağ köşeleri yuvarlat */
    .btn-group .btn-right.e-btn {
        border-top-right-radius: 5px;
        border-bottom-right-radius: 5px;
    }

    .e-fixed {
        position: fixed;
        top: 0;
        left: 0;
        height: 100vh;
        width: 100vw;
        z-index: 1000;
        overflow: hidden;
    }

    .physical-examination .form-label {
        font-size: 0.7rem; /* Label boyutunu daha da küçült */
        font-weight: 600; /* Daha belirgin görünüm */
        margin-bottom: 0.1rem; /* Label ile input arasındaki boşluk azaltıldı */
        text-align: center; /* Label'ı ortala */
    }

    .physical-examination .custom-input {
        height: 2.2rem; /* Yükseklik */
        width: 100%; /* Kolona tam oturması için */
        text-align: center; /* Sayıyı ortalamak için */
        padding: 0; /* Padding sıfırlanıyor */
        line-height: 2.2rem; /* Yüksekliği ortalamak için */
    }

    .physical-examination .row {
        display: flex; /* Flex düzeni ile yan yana yerleşim */
        flex-wrap: nowrap; /* Alt alta geçmeyi engelle */
        gap: 8px; /* Inputlar arasında boşluk bırak */
    }

    .physical-examination .col {
        flex: 1; /* Kolon genişliklerini eşitler */
        min-width: 60px; /* Minimum genişlik azaltıldı */
        padding: 0 4px; /* Kolonlar arasında boşluk azaltıldı */
    }

    .patient-card-container {
        display: flex;
        justify-content: center;
        align-items: center;
        margin-bottom: 20px;
    }

    .main-content {
        display: flex;
        justify-content: space-between;
        gap: 20px;
    }

    .left-column,
    .right-column {
        width: 48%;
    }

    .card-container {
        margin-bottom: 20px;
        padding: 10px;
    }

</style>


@*
     .custom-input {
        height: 2.5rem; /* Yüksekliği optimize ettik */
        width: 100%; /* Genişliği kolona göre belirledik */
        text-align: center; /* Placeholder ve girişlerin merkezlenmesi için */
    }


.e-card {
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 15px;
        background-color: #f9f9f9;
        margin-bottom: 20px;
        width: 100%; /* Sayfanın genişliğine uyum sağlar */
    }

    .e-card-header {
        display: flex;
        align-items: center;
    }

    .e-card-header-image img {
        border-radius: 50%;
        width: 50px;
        height: 50px;
        margin-right: 15px;
    }

    .e-card-header-text h4 {
        margin: 0;
        font-size: 18px;
    }

    .e-card-content {
        margin-top: 10px;
    }
 *@